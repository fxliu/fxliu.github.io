<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>福</title>
  
  <subtitle>业精于勤荒于嬉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2020-03-03T02:27:37.000Z</updated>
  <id>/</id>
  
  <author>
    <name>福</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySql</title>
    <link href="/2020/03/03/VCTools/MySql/"/>
    <id>/2020/03/03/VCTools/MySql/</id>
    <published>2020-03-03T02:27:37.000Z</published>
    <updated>2020-03-03T02:27:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><ul><li><a href="https://dev.mysql.com/downloads/installer/" target="_blank" rel="noopener">mysql环境</a><ul><li><a href="https://downloads.mysql.com/archives/community/" target="_blank" rel="noopener">指定版本</a></li><li>C库下载5.x最新版即可，8只支持64位2019</li><li>zip包含的是低版本VS + /MDd参数编译结果lib和dll</li><li>最好是自己下载源码编译</li></ul></li><li><a href="https://dev.mysql.com/doc/" target="_blank" rel="noopener">官方文档</a></li></ul><h3 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h3><ul><li><a href="https://cmake.org/download/" target="_blank" rel="noopener">CMake</a><ul><li>下载windows版最新版即可，CMake只是生成VS编译环境，32/64位不影响结果</li></ul></li><li>解压后源码路径：<code>D:\mysql-5.7.28\mysql-5.7.28</code><ul><li>创建目录：<code>D:\mysql-5.7.28\build</code>, <code>D:\mysql-5.7.28\install</code></li></ul></li><li>运行cmake-gui<ul><li>source: <code>D:\mysql-5.7.28\mysql-5.7.28</code></li><li>build: <code>D:\mysql-5.7.28\build</code></li><li>Configure编译<ul><li>错误处理：<code>You can download it with -DDOWNLOAD_BOOST=1 -DWITH_BOOST=&lt;directory&gt;</code><ul><li>错误原因：需要下载boost，设置参数，自动下载即可</li><li>选中<code>DOWNLOAD_BOOST</code></li><li>创建并设置<code>WITH_BOOST=D:\mysql-5.7.28\mysql-5.7.28\boost</code></li></ul></li><li>参数调整 - 并创建对应目录<ul><li><code>CMAKE_INSTALL_PREFIX</code>:<code>D:/mysql-5.7.28/install</code></li><li><code>MYSQL_DATADIR</code>:<code>D:/mysql-5.7.28/install</code></li><li><code>MYSQL_KEYRINGDIR</code>:<code>D:/mysql-5.7.28/keyring</code></li></ul></li><li>SSL：根据体型路径下载安装<ul><li>自己编译OpenSSL<ul><li>目录结构：D:\openssl\include\openssl*.h, D:\openssl\lib*.lib</li></ul></li><li>指定SSL参数<ul><li><code>WITH_SSL</code>:<code>D:/openssl</code></li></ul></li></ul></li></ul></li><li>重新编译Configure<ul><li>遇到错误自己看看错误描述和<code>cmake</code>文件夹下的编译脚本，比度娘靠谱</li></ul></li></ul></li></ul><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 只需要`libmysql.dll` `libmysql.lib` `mysqlclient.lib` 即可</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MySqlClient.h"</span></span></span><br><span class="line"></span><br><span class="line">CMySqlClient::CMySqlClient()</span><br><span class="line">&#123;</span><br><span class="line">    m_sql = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CMySqlClient::~CMySqlClient()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMySqlClient::Init()</span><br><span class="line">&#123;</span><br><span class="line">    m_sql = mysql_init(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (!m_sql)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"mysql_init error."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置编码</span></span><br><span class="line">    <span class="comment">// mysql_options(m_sql, MYSQL_SET_CHARSET_NAME, "gbk");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMySqlClient::Release()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!m_sql)</span><br><span class="line">    &#123;</span><br><span class="line">        m_sql = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> CMySqlClient::Connect()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!mysql_real_connect(m_sql, <span class="string">"127.0.0.1"</span>, <span class="string">"root"</span>, <span class="string">"12345678"</span>, <span class="literal">NULL</span>, <span class="number">3306</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"mysql_real_connect error."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> bQuery = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (mysql_query(m_sql, <span class="string">"SELECT * FROM testdb.test"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        bQuery = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"mysql_query error: %s"</span>, mysql_error(m_sql));</span><br><span class="line">    &#125;</span><br><span class="line">    MYSQL_RES *res = mysql_use_result(m_sql);</span><br><span class="line">    <span class="keyword">if</span> (res)</span><br><span class="line">    &#123;</span><br><span class="line">        MYSQL_ROW row;</span><br><span class="line">        <span class="keyword">while</span> (row = mysql_fetch_row(res))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (row == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> c = <span class="number">0</span>; c &lt; mysql_num_fields(res); c++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\t"</span>, row[c]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        mysql_free_result(res);</span><br><span class="line">    &#125;</span><br><span class="line">    mysql_close(m_sql);</span><br><span class="line">    <span class="keyword">return</span> bQuery;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      MySql
    
    </summary>
    
      <category term="VC" scheme="/categories/VC/"/>
    
    
      <category term="MySql" scheme="/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB</title>
    <link href="/2020/03/03/VCTools/MongoDB/"/>
    <id>/2020/03/03/VCTools/MongoDB/</id>
    <published>2020-03-03T02:27:37.000Z</published>
    <updated>2020-03-03T02:27:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><ul><li><a href="https://www.sqlite.org/download.html" target="_blank" rel="noopener">MongoDB</a></li><li><a href="https://github.com/mongodb/mongo-c-driver" target="_blank" rel="noopener">mongo-c-driver</a><ul><li>下载Release版，zip包，包含需要的libbson等</li></ul></li><li><a href="https://github.com/mongodb/libbson.git" target="_blank" rel="noopener">libbson.git</a></li><li>客户端<ul><li><a href="https://robomongo.org/download" target="_blank" rel="noopener">Robo 3T</a></li></ul></li><li>编译工具<ul><li><a href="https://cmake.org/" target="_blank" rel="noopener">cmake</a></li></ul></li></ul><h2 id="客户端编译"><a href="#客户端编译" class="headerlink" title="客户端编译"></a>客户端编译</h2><ul><li><a href="http://mongoc.org/libmongoc/current/installing.html" target="_blank" rel="noopener">官网引导文档</a></li><li>[cmake-gui]<ul><li>Configure<ul><li><code>Source Code</code>: <code>D:/mongo-c-driver-1.16.2</code></li><li><code>build the binaries</code>: <code>D:/mongo-c-driver-1.16.2/build</code></li><li>Configure按钮<ul><li>选择VS编译器版本</li></ul></li><li>错误处理<ul><li>BUILD_VERSION: 1.0.0.0</li><li>CMAKE_INSTALL_PREFIX: 路径要预先创建<code>D:/mongo-c-driver</code></li><li>配置调整完成后，重新点击Configure按钮</li></ul></li></ul></li><li>Generate</li><li><code>D:/mongo-c-driver-1.16.2/build</code>目录找到<code>ALL_BUILD.vcxproj</code>使用VS打开即可<ul><li>编译<code>INSTALL</code>工程<ul><li>内容生成到<code>D:/mongo-c-driver</code>，包含静态lib，include头文件等</li></ul></li></ul></li></ul></li></ul><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><p><a href="http://mongoc.org/libmongoc/current/api.html" target="_blank" rel="noopener">API</a></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// .h</span></span><br><span class="line"><span class="keyword">mongoc_uri_t</span> *m_uri;</span><br><span class="line"><span class="keyword">mongoc_client_t</span> *m_client;</span><br><span class="line"><span class="keyword">mongoc_collection_t</span> *m_collection;</span><br><span class="line"><span class="keyword">mongoc_collection_t</span> *m_collConfig;</span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line">mongoc_init();</span><br><span class="line"><span class="comment">// 释放</span></span><br><span class="line">mongoc_cleanup();</span><br><span class="line"><span class="comment">// 连接</span></span><br><span class="line"><span class="keyword">bson_error_t</span> error;</span><br><span class="line">CStringA strMongoDB = <span class="string">"mongodb://127.0.0.1:27017/"</span>;</span><br><span class="line">m_uri = mongoc_uri_new_with_error(strMongoDB, &amp;error);</span><br><span class="line"><span class="keyword">if</span> (!m_uri)</span><br><span class="line">&#123;</span><br><span class="line">    Log()-&gt;LogA(<span class="string">"failed to parse URI: %s\n;error message: %s;\n"</span>, CW2A(strMongoDB).m_psz, error.message);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">m_client = mongoc_client_new_from_uri(m_uri);</span><br><span class="line"><span class="keyword">if</span> (!m_client)</span><br><span class="line">&#123;</span><br><span class="line">    Log()-&gt;LogA(<span class="string">"mongoc_client_set_error_api error;\n"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 简便方法，不使用uri</span></span><br><span class="line"><span class="comment">// m_client = mongoc_client_new(strMongoDB);</span></span><br><span class="line"><span class="comment">// 释放连接</span></span><br><span class="line">mongoc_uri_destroy(m_uri);</span><br><span class="line">mongoc_client_destroy(m_client);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 集合</span></span><br><span class="line">mongoc_client_set_error_api(m_client, <span class="number">2</span>);</span><br><span class="line">m_collection = mongoc_client_get_collection(m_client, <span class="string">"sync"</span>, <span class="string">"pic"</span>);</span><br><span class="line"><span class="keyword">if</span> (!m_collection)</span><br><span class="line">&#123;</span><br><span class="line">    Log()-&gt;LogA(<span class="string">"mongoc_client_get_collection error: sync.pic;\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 释放集合</span></span><br><span class="line">mongoc_collection_destroy(m_collection);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建索引：不存在则创建</span></span><br><span class="line"><span class="keyword">bson_t</span> keys;</span><br><span class="line">bson_init(&amp;keys);</span><br><span class="line">BSON_APPEND_INT32(&amp;keys, <span class="string">"account"</span>, <span class="number">1</span>);</span><br><span class="line">BSON_APPEND_INT32(&amp;keys, <span class="string">"last_user_time"</span>, <span class="number">-1</span>);</span><br><span class="line"><span class="keyword">mongoc_index_opt_t</span> opt;</span><br><span class="line">mongoc_index_opt_init(&amp;opt);</span><br><span class="line">opt.name = <span class="string">"user_sync_time"</span>;    <span class="comment">// 指定索引名称</span></span><br><span class="line"><span class="keyword">if</span> (!mongoc_collection_create_index(m_collection, &amp;keys, &amp;opt, &amp;error))</span><br><span class="line">&#123;</span><br><span class="line">    Log()-&gt;LogA(<span class="string">"mongoc_collection_create_index error: %s;"</span>, error.message);</span><br><span class="line">    bson_destroy(&amp;keys);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// bson_t 对象需要释放</span></span><br><span class="line">bson_destroy(&amp;keys);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 插入</span></span><br><span class="line"><span class="keyword">bson_t</span> item;</span><br><span class="line">bson_init(&amp;item);</span><br><span class="line">BSON_APPEND_SYMBOL(&amp;item, <span class="string">"_id"</span>, pic_md5.GetBuffer());</span><br><span class="line">BSON_APPEND_BINARY(&amp;item, <span class="string">"sn"</span>, BSON_SUBTYPE_BINARY, (<span class="keyword">const</span> <span class="keyword">uint8_t</span>*)strFeature.c_str(), strFeature.length());</span><br><span class="line">BSON_APPEND_SYMBOL(&amp;item, <span class="string">"account"</span>, account.GetBuffer());</span><br><span class="line"></span><br><span class="line"><span class="keyword">bson_error_t</span> error;</span><br><span class="line"><span class="keyword">if</span> (mongoc_collection_insert(m_collection, MONGOC_INSERT_CONTINUE_ON_ERROR, &amp;item, <span class="literal">NULL</span>, &amp;error))</span><br><span class="line">    Log()-&gt;LogA(<span class="string">"mongoc_collection_insert: %s"</span>, pic_md5);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    Log()-&gt;LogA(<span class="string">"mongoc_collection_insert error: %s"</span>, pic_md5);</span><br><span class="line">bson_destroy(&amp;item);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查询</span></span><br><span class="line"><span class="keyword">mongoc_cursor_t</span>* CMongoClient::Query()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">bson_t</span> filter;</span><br><span class="line">    bson_init(&amp;filter);</span><br><span class="line">    <span class="comment">// 设置查询字段</span></span><br><span class="line">    <span class="keyword">bson_t</span> opts;</span><br><span class="line">    bson_init(&amp;opts);</span><br><span class="line">    <span class="comment">// 设置显示字段</span></span><br><span class="line">    <span class="keyword">bson_t</span> opts_project;</span><br><span class="line">    BSON_APPEND_DOCUMENT_BEGIN(&amp;opts, <span class="string">"projection"</span>, &amp;opts_project);</span><br><span class="line">    BSON_APPEND_INT32(&amp;opts_project, <span class="string">"_id"</span>, <span class="number">0</span>);</span><br><span class="line">    bson_append_document_end(&amp;opts, &amp;opts_project);</span><br><span class="line">    <span class="comment">// 设置索引</span></span><br><span class="line">    <span class="keyword">bson_t</span> opts_sort;</span><br><span class="line">    BSON_APPEND_DOCUMENT_BEGIN(&amp;opts, <span class="string">"sort"</span>, &amp;opts_sort);</span><br><span class="line">    BSON_APPEND_INT32(&amp;opts_sort, <span class="string">"last_user_time"</span>, <span class="number">1</span>);</span><br><span class="line">    bson_append_document_end(&amp;opts, &amp;opts_sort);</span><br><span class="line">    <span class="keyword">mongoc_cursor_t</span>* cursor = mongoc_collection_find_with_opts(m_collection, &amp;filter, &amp;opts, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    bson_destroy(&amp;filter);</span><br><span class="line">    bson_destroy(&amp;opts);</span><br><span class="line">    bson_destroy(&amp;opts_project);</span><br><span class="line">    <span class="keyword">return</span> cursor;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">bson_t</span>* CMongoClient::GetNext(<span class="keyword">mongoc_cursor_t</span>* cursor)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">bson_t</span>* doc = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (mongoc_cursor_next(cursor, &amp;doc)) &#123;</span><br><span class="line">        <span class="comment">//char* str = bson_as_canonical_extended_json(doc, NULL);</span></span><br><span class="line">        <span class="comment">//printf("%s\n", str);</span></span><br><span class="line">        <span class="comment">//bson_free(str);</span></span><br><span class="line">        <span class="keyword">return</span> doc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">CStringA <span class="title">GetStringValue</span><span class="params">(<span class="keyword">const</span> <span class="keyword">bson_t</span>* doc, CStringA key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bson_iter_t</span> iter;</span><br><span class="line">    <span class="keyword">if</span> (bson_iter_init_find(&amp;iter, doc, key))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">uint32_t</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *value = bson_iter_symbol(&amp;iter, &amp;len);</span><br><span class="line">        <span class="keyword">return</span> CStringA(value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">CStringA <span class="title">GetBinaryValue</span><span class="params">(<span class="keyword">const</span> <span class="keyword">bson_t</span>* doc, CStringA key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bson_iter_t</span> iter;</span><br><span class="line">    <span class="keyword">if</span> (bson_iter_init_find(&amp;iter, doc, key))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bson_subtype_t</span> subType;</span><br><span class="line">        <span class="keyword">uint32_t</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">uint8_t</span> *data = <span class="literal">NULL</span>;</span><br><span class="line">        bson_iter_binary(&amp;iter, &amp;subType, &amp;len, &amp;data);</span><br><span class="line">        <span class="keyword">return</span> CStringA((<span class="keyword">char</span>*)data, len);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FreeQuery</span><span class="params">(<span class="keyword">mongoc_cursor_t</span>* cursor)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mongoc_cursor_destroy(cursor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      MongoDB
    
    </summary>
    
      <category term="VC" scheme="/categories/VC/"/>
    
    
      <category term="MongoDB" scheme="/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Camera</title>
    <link href="/2020/02/26/Android/%E7%B3%BB%E7%BB%9F/Camera/"/>
    <id>/2020/02/26/Android/系统/Camera/</id>
    <published>2020-02-26T08:57:38.000Z</published>
    <updated>2020-02-26T08:57:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第三方"><a href="#第三方" class="headerlink" title="第三方"></a>第三方</h2><ul><li><p><a href="https://developer.android.google.cn/training/camera" target="_blank" rel="noopener">camera安卓开发文档</a></p></li><li><p><a href="https://github.com/LuckSiege/PictureSelector" target="_blank" rel="noopener">PictureSelector</a></p></li><li><p><a href="https://github.com/CameraKit/camerakit-android" target="_blank" rel="noopener">camerakit-android</a></p></li><li><p><a href="https://github.com/bilibili/boxing" target="_blank" rel="noopener">boxing</a></p></li><li><p><a href="https://github.com/natario1/CameraView" target="_blank" rel="noopener">CameraView</a></p></li><li><p><a href="https://github.com/CJT2325/CameraView" target="_blank" rel="noopener">CameraView</a></p></li></ul><h2 id="PictureSelector"><a href="#PictureSelector" class="headerlink" title="PictureSelector"></a>PictureSelector</h2><pre><code class="Java"></code></pre>]]></content>
    
    <summary type="html">
    
      Camera
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="Camera" scheme="/tags/Camera/"/>
    
  </entry>
  
  <entry>
    <title>AgentWeb</title>
    <link href="/2020/02/23/Android/%E7%AC%AC%E4%B8%89%E6%96%B9/AgentWeb/"/>
    <id>/2020/02/23/Android/第三方/AgentWeb/</id>
    <published>2020-02-23T00:49:51.000Z</published>
    <updated>2020-02-23T00:49:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p><a href="https://github.com/Justson/AgentWeb" target="_blank" rel="noopener">AgentWeb-GitHub-包含Demo</a></p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">// build.gradle(app)</span></span><br><span class="line">implementation <span class="string">'com.just.agentweb:agentweb:4.1.2'</span> <span class="comment">// (必选)</span></span><br><span class="line">implementation <span class="string">'com.just.agentweb:filechooser:4.1.2'</span><span class="comment">// (可选)</span></span><br><span class="line">implementation <span class="string">'com.download.library:Downloader:4.1.2'</span><span class="comment">// (可选)</span></span><br><span class="line"><span class="comment">// Demo\sample\libs目录有 alipaySdk-20180601.jar // (可选)</span></span><br><span class="line"><span class="comment">// AgentWeb会尝试加载所有组件，可选功能没有时，会报错，忽略即可</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># release 编译混淆告警处理</span><br><span class="line"># 依赖的第三方库，取消混淆即可</span><br><span class="line">-dontwarn com.download.library.**</span><br><span class="line">-keep class com.download.library.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">-dontwarn com.alipay.sdk.**</span><br><span class="line">-keep class com.alipay.sdk.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">-dontwarn me.nereo.multi_image_selector.**</span><br><span class="line">-keep class me.nereo.multi_image_selector.** &#123; *; &#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 附加对象从Demo获取即可</span></span><br><span class="line">AgentWeb mAgentWeb;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">(AppCompatActivity app)</span> </span>&#123;</span><br><span class="line">    mAgentWeb = AgentWeb.with(app)</span><br><span class="line">            .setAgentWebParent((LinearLayout) app.findViewById(R.id.webLayout), <span class="keyword">new</span> LinearLayout.LayoutParams(-<span class="number">1</span>, -<span class="number">1</span>))</span><br><span class="line">            .useDefaultIndicator()</span><br><span class="line">            .setAgentWebWebSettings(<span class="keyword">new</span> CustomSettings())</span><br><span class="line">            .setWebChromeClient(mWebChromeClient)</span><br><span class="line">            .setWebViewClient(mWebViewClient)</span><br><span class="line">            .setAgentWebUIController(mAgentWebUIController)</span><br><span class="line">            .setMainFrameErrorView(R.layout.agentweb_error_page, -<span class="number">1</span>)</span><br><span class="line">            .setSecurityType(AgentWeb.SecurityType.STRICT_CHECK)</span><br><span class="line">            .setWebLayout(<span class="keyword">new</span> WebLayout(app))</span><br><span class="line">            .setOpenOtherPageWays(DefaultWebClient.OpenOtherPageWays.ASK)<span class="comment">//打开其他应用时，弹窗咨询用户是否前往其他应用</span></span><br><span class="line">            .interceptUnkownUrl() <span class="comment">//拦截找不到相关页面的Scheme</span></span><br><span class="line">            .createAgentWeb()</span><br><span class="line">            .ready()</span><br><span class="line">            .go(Config.WebUrl.get(app));</span><br><span class="line">    addBGChild((FrameLayout) mAgentWeb.getWebCreator().getWebParentLayout());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> com.just.agentweb.WebViewClient mWebViewClient = <span class="keyword">new</span> WebViewClient() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, WebResourceRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.shouldOverrideUrlLoading(view, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onPageStarted(view, url, favicon);</span><br><span class="line">            Log.i(TAG, <span class="string">"onPageStarted: "</span> + url);</span><br><span class="line">            <span class="keyword">if</span>(mIsMainFrameError) &#123;</span><br><span class="line">                <span class="comment">// 错误页隐藏，源码这里处理有漏洞</span></span><br><span class="line">                <span class="comment">// 当遇到页面跳转时：onPageStarted中的url和onPageFinished的url可能不一致</span></span><br><span class="line">                <span class="comment">// 源码校验url必须一致才会隐藏错误页</span></span><br><span class="line">                <span class="comment">// 自己强制处理下</span></span><br><span class="line">                mAgentWebUIController.onShowMainFrame();</span><br><span class="line">                mIsMainFrameError = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageFinished</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onPageFinished(view, url);</span><br><span class="line">            Log.i(TAG, <span class="string">"onPageFinished: "</span> + url);</span><br><span class="line">            mIsFinish = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">private</span> AgentWebUIControllerImplBase mAgentWebUIController = <span class="keyword">new</span> AgentWebUIControllerImplBase() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMainFrameError</span><span class="params">(WebView view, <span class="keyword">int</span> errorCode, String description, String failingUrl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onMainFrameError(view, errorCode, description, failingUrl);</span><br><span class="line">        Log.i(TAG, <span class="string">"onMainFrameError: "</span> + failingUrl);</span><br><span class="line">        mIsMainFrameError = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      AgentWeb
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="AgentWeb" scheme="/tags/AgentWeb/"/>
    
  </entry>
  
  <entry>
    <title>百度人脸识别</title>
    <link href="/2020/02/22/Android/%E7%AC%AC%E4%B8%89%E6%96%B9/%E7%99%BE%E5%BA%A6%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    <id>/2020/02/22/Android/第三方/百度人脸识别/</id>
    <published>2020-02-22T00:28:31.000Z</published>
    <updated>2020-02-22T00:28:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul><li>注册账号，并申请License<ul><li>生成签名文件<ul><li><code>keytool -genkey -storepass &quot;storepass&quot; -alias &quot;myapp&quot; -keypass &quot;keypass&quot; -keystore myapp -keyalg RSA -keysize 2048 -validity 10000</code></li><li>注意<code>storepass</code> <code>keypass</code> <code>alias</code>的填写，后续要用，一旦配置License，不允许更改</li><li><code>keystore</code>对应要生成的文件名</li></ul></li><li>获取MD5<ul><li><code>keytool -list -v -keystore myapp</code></li></ul></li><li>下载人脸识别实例包</li></ul></li></ul><h3 id="gradle"><a href="#gradle" class="headerlink" title="gradle"></a>gradle</h3>]]></content>
    
    <summary type="html">
    
      百度人脸识别
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="百度人脸识别" scheme="/tags/%E7%99%BE%E5%BA%A6%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>Application</title>
    <link href="/2020/02/20/Android/%E6%8E%A7%E4%BB%B6/Application/"/>
    <id>/2020/02/20/Android/控件/Application/</id>
    <published>2020-02-20T02:18:46.000Z</published>
    <updated>2020-02-20T02:18:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MyApplication"><a href="#MyApplication" class="headerlink" title="MyApplication"></a>MyApplication</h2><h3 id="配置私有应用参数"><a href="#配置私有应用参数" class="headerlink" title="配置私有应用参数"></a>配置私有应用参数</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> test = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span> <span class="attr">android:name</span>=<span class="string">".MyApplication"</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Application
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="Application" scheme="/tags/Application/"/>
    
  </entry>
  
  <entry>
    <title>字符串</title>
    <link href="/2020/02/16/Android/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>/2020/02/16/Android/字符串/</id>
    <published>2020-02-16T06:02:57.000Z</published>
    <updated>2020-02-16T06:02:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="特殊串"><a href="#特殊串" class="headerlink" title="特殊串"></a>特殊串</h2><h3 id="UUID"><a href="#UUID" class="headerlink" title="UUID"></a>UUID</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String strUUID = UUID.randomUUID().toString();</span><br></pre></td></tr></table></figure><h3 id="json"><a href="#json" class="headerlink" title="json"></a>json</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// com.google.gson: JsonObject, JsonParser</span></span><br><span class="line">String strJson = <span class="string">"&#123;&#125;"</span>;</span><br><span class="line">JsonObject jo = <span class="keyword">new</span> JsonParser().parse(strJson).getAsJsonObject();</span><br><span class="line"></span><br><span class="line">JsonObject obj = <span class="keyword">new</span> JsonObject();</span><br><span class="line">obj.addProperty(key, value);</span><br><span class="line">obj.toString()</span><br></pre></td></tr></table></figure><h2 id="time"><a href="#time" class="headerlink" title="time"></a>time</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDateTime</span><span class="params">(String format=<span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</span> </span>&#123;</span><br><span class="line">    SimpleDateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(format, Locale.CHINESE);</span><br><span class="line">    <span class="keyword">return</span> dateFormat.format(<span class="keyword">new</span> Date(System.currentTimeMillis()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getTimestamp</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> System.currentTimeMillis()/<span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h2><h3 id="CFB"><a href="#CFB" class="headerlink" title="CFB"></a>CFB</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CFBUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TAG = CFBUtil<span class="class">.<span class="keyword">class</span>.<span class="title">getSimpleName</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MODE_ENC = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MODE_DEC = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] AES_KEY = <span class="string">"1234567890123456"</span>.getBytes();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] AES_VI = <span class="string">"1234567890123456"</span>.getBytes();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] encryption(<span class="keyword">int</span> mode, <span class="keyword">byte</span>[] key, <span class="keyword">byte</span>[] vi, <span class="keyword">byte</span>[] content) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/CFB128/NoPadding"</span>); <span class="comment">//AES加密模式，CFB 加密模式</span></span><br><span class="line">            SecretKeySpec keySpec = <span class="keyword">new</span> SecretKeySpec(key, <span class="string">"AES"</span>);      <span class="comment">//AES加密方式</span></span><br><span class="line">            IvParameterSpec ivSpec = <span class="keyword">new</span> IvParameterSpec(vi);</span><br><span class="line">            cipher.init(mode == MODE_ENC ? Cipher.ENCRYPT_MODE : Cipher.DECRYPT_MODE, keySpec, ivSpec);</span><br><span class="line">            <span class="keyword">return</span> cipher.doFinal(content);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException | NoSuchPaddingException |</span><br><span class="line">                InvalidKeyException | IllegalBlockSizeException |</span><br><span class="line">                BadPaddingException | InvalidAlgorithmParameterException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            Log.e(TAG, <span class="string">"encryption failed... err: "</span> + e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            Log.e(TAG, <span class="string">"encryption failed ...err: "</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密: 返回Base64密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">enc</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] data = encryption(MODE_ENC, AES_KEY, AES_VI, text.getBytes());</span><br><span class="line">        <span class="keyword">return</span> Base64.encodeToString(data, Base64.NO_WRAP);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密: 传入Base64密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">dec</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] data = encryption(MODE_DEC, AES_KEY, AES_VI, Base64.decode(text, Base64.NO_WRAP));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      字符串, UUID
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="字符串" scheme="/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="UUID" scheme="/tags/UUID/"/>
    
  </entry>
  
  <entry>
    <title>系统信息</title>
    <link href="/2020/02/16/Android/%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/"/>
    <id>/2020/02/16/Android/系统/系统信息/</id>
    <published>2020-02-16T05:46:21.000Z</published>
    <updated>2020-02-16T05:46:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">String <span class="title">getDeviceInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    sb.append(<span class="string">"主板： "</span> + Build.BOARD);</span><br><span class="line">    sb.append(<span class="string">"\n系统启动程序版本号： "</span> + Build.BOOTLOADER);</span><br><span class="line">    sb.append(<span class="string">"\n系统定制商： "</span> + Build.BRAND);</span><br><span class="line">    sb.append(<span class="string">"\ncpu指令集： "</span> + Build.CPU_ABI);</span><br><span class="line">    sb.append(<span class="string">"\ncpu指令集2 "</span> + Build.CPU_ABI2);</span><br><span class="line">    sb.append(<span class="string">"\n设置参数： "</span> + Build.DEVICE);</span><br><span class="line">    sb.append(<span class="string">"\n显示屏参数："</span> + Build.DISPLAY);</span><br><span class="line">    sb.append(<span class="string">"\n无线电固件版本："</span> + Build.getRadioVersion());</span><br><span class="line">    sb.append(<span class="string">"\n硬件识别码： "</span> + Build.FINGERPRINT);</span><br><span class="line">    sb.append(<span class="string">"\n硬件名称： "</span> + Build.HARDWARE);</span><br><span class="line">    sb.append(<span class="string">"\nHOST: "</span> + Build.HOST);</span><br><span class="line">    sb.append(<span class="string">"\n版本号);"</span> + Build.ID);</span><br><span class="line">    sb.append(<span class="string">"\n硬件制造商： "</span> + Build.MANUFACTURER);</span><br><span class="line">    sb.append(<span class="string">"\n型号： "</span> + Build.MODEL);</span><br><span class="line">    sb.append(<span class="string">"\n硬件序列号： "</span> + Build.SERIAL);</span><br><span class="line">    sb.append(<span class="string">"\n手机制造商： "</span> + Build.PRODUCT);</span><br><span class="line">    sb.append(<span class="string">"\n描述Build的标签： "</span> + Build.TAGS);</span><br><span class="line">    sb.append(<span class="string">"\nTIME: "</span> + Build.TIME);</span><br><span class="line">    sb.append(<span class="string">"\nbuilder类型"</span> + Build.TYPE);</span><br><span class="line">    sb.append(<span class="string">"\nUSER: "</span> + Build.USER);</span><br><span class="line">    sb.append(<span class="string">"\nSDK: "</span> + Build.VERSION.SDK);</span><br><span class="line">    sb.append(<span class="string">"\nAndroid版本: "</span> + Build.VERSION.RELEASE);</span><br><span class="line">    <span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="唯一ID"><a href="#唯一ID" class="headerlink" title="唯一ID"></a>唯一ID</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ANDROID_ID是Android系统第一次启动时产生的一个64bit（16BYTES）数，如果设备被wipe还原后，该ID将被重置（变化）</span></span><br><span class="line">String str = Settings.Secure.getString(getContentResolver(), Settings.Secure.ANDROID_ID);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      系统信息
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="系统信息" scheme="/tags/%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>字符串</title>
    <link href="/2020/02/15/PHP/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>/2020/02/15/PHP/字符串/</id>
    <published>2020-02-15T08:13:13.000Z</published>
    <updated>2020-02-15T08:13:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 把字符串 "Hello world!" 中的字符 "world" 替换为 "Shanghai"</span></span><br><span class="line"><span class="comment">// str_replace(find,replace,string,count)</span></span><br><span class="line"><span class="keyword">echo</span> str_replace(<span class="string">"world"</span>,<span class="string">"Shanghai"</span>,<span class="string">"Hello world!"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      字符串
    
    </summary>
    
      <category term="PHP" scheme="/categories/PHP/"/>
    
    
      <category term="字符串" scheme="/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="/2020/02/15/Android/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>/2020/02/15/Android/数据结构/</id>
    <published>2020-02-15T01:39:42.000Z</published>
    <updated>2020-02-15T01:39:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i: <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;)</span><br><span class="line">    System.out.println(i);</span><br></pre></td></tr></table></figure><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;<span class="keyword">int</span>&gt; list = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">int</span>&gt;(</span><br><span class="line">        Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;Object&gt;()&#123;&#123;add(<span class="number">1</span>); add(<span class="string">"2"</span>);&#125;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Object v : list)</span><br><span class="line">    System.out.println(v);</span><br></pre></td></tr></table></figure><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 遍历</span></span><br><span class="line"><span class="keyword">for</span>(Integer i: <span class="keyword">new</span> HashSet&lt;Integer&gt;() &#123;&#123;add(<span class="number">1</span>); add(<span class="number">2</span>);&#125;&#125;)</span><br><span class="line">    System.out.println(i);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义排序</span></span><br><span class="line">Set&lt;String&gt; set = <span class="keyword">new</span> TreeSet&lt;String&gt;(<span class="keyword">new</span> MyComparator());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String o1, String o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o2.compareTo(o1);<span class="comment">// 降序排列</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// HashMap</span></span><br><span class="line"><span class="comment">// 定义</span></span><br><span class="line">HashMap&lt;String, String&gt; mHashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">// 初始化赋值</span></span><br><span class="line">HashMap&lt;String, String&gt; mHashMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;() &#123;&#123;put(<span class="string">"a"</span>, <span class="string">"1"</span>);&#125;&#125;;</span><br><span class="line"><span class="comment">// 添加</span></span><br><span class="line">mHashMap.put(<span class="string">"a"</span>, <span class="string">"b"</span>);</span><br><span class="line"><span class="comment">// 查找</span></span><br><span class="line">mHashMap.containsKey(<span class="string">"a"</span>);</span><br><span class="line"><span class="comment">// 获取</span></span><br><span class="line">mHashMap.get(<span class="string">"a"</span>);</span><br><span class="line"><span class="comment">// 遍历</span></span><br><span class="line"><span class="keyword">for</span> (Entry&lt;String, String&gt; entry: map.entrySet()) &#123;</span><br><span class="line">    entry.getKey();</span><br><span class="line">    entry.getValue();</span><br><span class="line">    <span class="comment">// 这种方式不适用于删除元素</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line"><span class="comment">// key process</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全删除</span></span><br><span class="line"><span class="keyword">for</span> (Iterator&lt;Map.entry&lt;String, String&gt;&gt; it = myHashMap.entrySet().iterator; it.hasNext();)&#123;</span><br><span class="line">    Map.Entry&lt;K, V&gt; item = it.next();</span><br><span class="line">    K key = item.getKey();</span><br><span class="line">    V val = item.getValue();</span><br><span class="line">    <span class="comment">//可以安全删除元素:"it.remove();"</span></span><br><span class="line">    <span class="comment">//Iterator方法通用于其他容器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// int做主键的map: 基于二分查找, 适用于主键数量较少情况</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.SparseIntArray;  <span class="comment">// int-&gt;int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 支持基于index的操作, 也支持基于key的操作</span></span><br><span class="line">SparseArray&lt;String&gt; sparseArray = <span class="keyword">new</span> SparseArray&lt;String&gt;();  <span class="comment">// int-&gt;string</span></span><br><span class="line"><span class="comment">//向sparseArray存入元素value，key为index</span></span><br><span class="line">sparseArray.put(key, value);</span><br><span class="line"><span class="comment">//这个方法本质也是利用put(key, value)去存入数据</span></span><br><span class="line">sparseArray.append(key, value);</span><br><span class="line"><span class="comment">//查找key所在的位置，如果不存在，则返回-1</span></span><br><span class="line">sparseArray.indexOfKey(key);</span><br><span class="line"><span class="comment">//查找value所在的位置，如果不存在，则返回-1</span></span><br><span class="line">sparseArray.indexOfValue(value);</span><br><span class="line"><span class="comment">//更新某个key的值</span></span><br><span class="line">sparseArray.setValueAt(index, value);</span><br><span class="line"><span class="comment">//获取index所对应的值，没有则返回null</span></span><br><span class="line">sparseArray.get(index);</span><br><span class="line"><span class="comment">//获取index所对应的值，没有则返回自定义的默认值"default-value"</span></span><br><span class="line">sparseArray.get(index,<span class="string">"default-value"</span>);</span><br><span class="line"><span class="comment">//删除index对应的元素</span></span><br><span class="line">sparseArray.delete(index);</span><br><span class="line"><span class="comment">//移除，本质也是调用delete(int)方法</span></span><br><span class="line">sparseArray.remove(index);</span><br><span class="line"><span class="comment">//清空所有数据</span></span><br><span class="line">sparseArray.clear();</span><br></pre></td></tr></table></figure><h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> MyClass instance;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MyClass <span class="title">createInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == instance) &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (MyClass<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> == instance) &#123;</span><br><span class="line">                instance = <span class="keyword">new</span> MyClass();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      数据结构, List
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="数据结构" scheme="/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="List" scheme="/tags/List/"/>
    
      <category term="Map" scheme="/tags/Map/"/>
    
  </entry>
  
  <entry>
    <title>AndroidManifest</title>
    <link href="/2020/02/14/Android/AndroidManifest/"/>
    <id>/2020/02/14/Android/AndroidManifest/</id>
    <published>2020-02-14T04:20:58.000Z</published>
    <updated>2020-02-14T04:20:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- NFC权限 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.NFC"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 声明所依赖的外部的硬件，并指定为必须 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-feature</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"android.hardware.nfc"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:required</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 网络权限 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="权限动态申请"><a href="#权限动态申请" class="headerlink" title="权限动态申请"></a>权限动态申请</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方式1</span></span><br><span class="line"><span class="keyword">if</span> (ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">    <span class="comment">// 申请权限</span></span><br><span class="line">    ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;Manifest.permission.CAMERA&#125;, Constant.REQ_PERM_CAMERA);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 方式2</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestPermissions</span><span class="params">(<span class="keyword">int</span> requestCode, String permission)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (permission != <span class="keyword">null</span> &amp;&amp; permission.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">23</span>) &#123;</span><br><span class="line">                <span class="comment">// 检查是否有权限</span></span><br><span class="line">                <span class="keyword">int</span> hasPer = checkSelfPermission(permission);</span><br><span class="line">                <span class="keyword">if</span> (hasPer != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    <span class="comment">// 显示权限请求</span></span><br><span class="line">                    shouldShowRequestPermissionRationale(permission);</span><br><span class="line">                    requestPermissions(<span class="keyword">new</span> String[]&#123;permission&#125;, requestCode);</span><br><span class="line">                    Log.e(TAG, <span class="string">"requestPermissions: "</span> + permission);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 99是指用户点击取消后继续提醒次数</span></span><br><span class="line">requestPermissions(<span class="number">99</span>, Manifest.permission.CAMERA);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 申请结果通知函数</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">    <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]==PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">        <span class="comment">// TODO：权限申请成功</span></span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">"系统权限申请失败，功能无法使用"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="debug状态"><a href="#debug状态" class="headerlink" title="debug状态"></a>debug状态</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isDebug</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ApplicationInfo info = context.getApplicationInfo();</span><br><span class="line">        <span class="keyword">return</span> (info.flags &amp; ApplicationInfo.FLAG_DEBUGGABLE) != <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      AndroidManifest
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="AndroidManifest" scheme="/tags/AndroidManifest/"/>
    
  </entry>
  
  <entry>
    <title>文件</title>
    <link href="/2020/02/11/Android/%E7%B3%BB%E7%BB%9F/%E6%96%87%E4%BB%B6/"/>
    <id>/2020/02/11/Android/系统/文件/</id>
    <published>2020-02-11T07:38:28.000Z</published>
    <updated>2020-02-11T07:38:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户配置"><a href="#用户配置" class="headerlink" title="用户配置"></a>用户配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 映射为xml配置文件</span></span><br><span class="line">context.getSharedPreferences(<span class="string">"debug"</span>, <span class="number">0</span>).edit().putString(<span class="string">"test"</span>, deviceId).apply();</span><br><span class="line">String deviceId = context.getSharedPreferences(<span class="string">"debug"</span>, <span class="number">0</span>).getString(<span class="string">"test"</span>, <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><h2 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 百度 FileUtils</span></span><br><span class="line"><span class="keyword">package</span> com.baidu.idl.face.platform.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.webkit.MimeTypeMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileFilter;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FilenameFilter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.Channels;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.FileChannel;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.ReadableByteChannel;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IRWXU = <span class="number">00700</span>; <span class="comment">// rwx u</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IRUSR = <span class="number">00400</span>; <span class="comment">// r-- u</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IWUSR = <span class="number">00200</span>; <span class="comment">// -w- u</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IXUSR = <span class="number">00100</span>; <span class="comment">// --x u</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IRWXG = <span class="number">00070</span>; <span class="comment">// rwx g</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IRGRP = <span class="number">00040</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IWGRP = <span class="number">00020</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IXGRP = <span class="number">00010</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IRWXO = <span class="number">00007</span>; <span class="comment">// rwx o</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IROTH = <span class="number">00004</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IWOTH = <span class="number">00002</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> S_IXOTH = <span class="number">00001</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Regular expression for safe filenames: no spaces or metacharacters</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Pattern SAFE_FILENAME_PATTERN = Pattern.compile(<span class="string">"[\\w%+,./=_-]+"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Pattern RESERVED_CHARS_PATTERN = Pattern.compile(<span class="string">"[\\\\/:\\*\\?\\\"&lt;&gt;|]"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FileUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check if a filename is "safe" (no metacharacters or spaces).</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file The file to check</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isFilenameSafe</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SAFE_FILENAME_PATTERN.matcher(file.getPath()).matches();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文件名是否有效，检测是否包含非法字符,文件名不能包含 \/:*?"&lt;&gt;|</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isFilenameValid</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(name)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> !RESERVED_CHARS_PATTERN.matcher(name).find();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 复制文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyFile</span><span class="params">(String src, String dest)</span> </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> FileInputStream(src);</span><br><span class="line">            IoUtils.copyStream(fis, <span class="keyword">new</span> File(dest));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IoUtils.closeQuietly(fis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 复制文件,使用nio以提高性能</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src  - 源文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest - 目标文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyFile</span><span class="params">(File src, File dest)</span> </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">        FileChannel in = <span class="keyword">null</span>;</span><br><span class="line">        FileChannel out = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> FileInputStream(src);</span><br><span class="line">            fos = <span class="keyword">new</span> FileOutputStream(dest);</span><br><span class="line">            in = fis.getChannel(); <span class="comment">// 得到对应的文件通道</span></span><br><span class="line">            out = fos.getChannel(); <span class="comment">// 得到对应的文件通道</span></span><br><span class="line">            in.transferTo(<span class="number">0</span>, in.size(), out); <span class="comment">// 连接两个通道，并且从in通道读取，然后写入out通道</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IoUtils.closeQuietly(fis);</span><br><span class="line">            IoUtils.closeQuietly(in);</span><br><span class="line">            IoUtils.closeQuietly(fos);</span><br><span class="line">            IoUtils.closeQuietly(out);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 复制文件夹</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyDirectory</span><span class="params">(File src, File dest)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (src.exists()) &#123;</span><br><span class="line">            dest.mkdirs();</span><br><span class="line">            File[] files = src.listFiles();</span><br><span class="line">            <span class="keyword">if</span> (files == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">                <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">                    copyDirectory(file, <span class="keyword">new</span> File(dest, file.getName()));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    copyFile(file, <span class="keyword">new</span> File(dest, file.getName()));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Ensure directory exists</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ensureDir</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (file.isFile()) &#123;</span><br><span class="line">                file.delete();</span><br><span class="line">                file.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            file.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Ensure make directory, 如果存在同名文件夹，则添加上数字后缀</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">ensureMkdir</span><span class="params">(<span class="keyword">final</span> File dir)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dir == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        File tempDir = dir;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (tempDir.exists()) &#123;</span><br><span class="line">            tempDir = <span class="keyword">new</span> File(dir.getParent(), dir.getName() + <span class="string">"("</span> + i + <span class="string">")"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tempDir.mkdir();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Ensure parent</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ensureParent</span><span class="params">(<span class="keyword">final</span> File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != file) &#123;</span><br><span class="line">            <span class="keyword">final</span> File parentFile = file.getParentFile();</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != parentFile &amp;&amp; !parentFile.exists()) &#123;</span><br><span class="line">                parentFile.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Clean a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir the directory to clean.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cleanDir</span><span class="params">(<span class="keyword">final</span> File dir)</span> </span>&#123;</span><br><span class="line">        deleteDir(dir, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Clean a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir    the directory to clean.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filter the filter to determine which file or directory to delete.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cleanDir</span><span class="params">(<span class="keyword">final</span> File dir, <span class="keyword">final</span> FilenameFilter filter)</span> </span>&#123;</span><br><span class="line">        deleteDir(dir, <span class="keyword">false</span>, filter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Clean a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir    the directory to clean.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filter the filter to determine which file or directory to delete.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cleanDir</span><span class="params">(<span class="keyword">final</span> File dir, <span class="keyword">final</span> FileFilter filter)</span> </span>&#123;</span><br><span class="line">        deleteDir(dir, <span class="keyword">false</span>, filter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteDir</span><span class="params">(<span class="keyword">final</span> String dir)</span> </span>&#123;</span><br><span class="line">        deleteDir(<span class="keyword">new</span> File(dir));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir the directory to clean.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteDir</span><span class="params">(<span class="keyword">final</span> File dir)</span> </span>&#123;</span><br><span class="line">        deleteDir(dir, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir    the directory to clean.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filter the filter to determine which file or directory to delete.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteDir</span><span class="params">(<span class="keyword">final</span> File dir, <span class="keyword">final</span> FileFilter filter)</span> </span>&#123;</span><br><span class="line">        deleteDir(dir, <span class="keyword">true</span>, filter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir    the directory to clean.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filter the filter to determine which file or directory to delete.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteDir</span><span class="params">(<span class="keyword">final</span> File dir, <span class="keyword">final</span> FilenameFilter filter)</span> </span>&#123;</span><br><span class="line">        deleteDir(dir, <span class="keyword">true</span>, filter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir       the directory to clean.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> removeDir true to remove the &#123;<span class="doctag">@code</span> dir&#125;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteDir</span><span class="params">(<span class="keyword">final</span> File dir, <span class="keyword">final</span> <span class="keyword">boolean</span> removeDir)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dir != <span class="keyword">null</span> &amp;&amp; dir.isDirectory()) &#123;</span><br><span class="line">            <span class="keyword">final</span> File[] files = dir.listFiles();</span><br><span class="line">            <span class="keyword">if</span> (files != <span class="keyword">null</span> &amp;&amp; files.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">final</span> File file : files) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">                        deleteDir(file, removeDir);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        file.delete();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (removeDir) &#123;</span><br><span class="line">                dir.delete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir       the directory to clean.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> removeDir true to remove the &#123;<span class="doctag">@code</span> dir&#125;.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filter    the filter to determine which file or directory to delete.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteDir</span><span class="params">(<span class="keyword">final</span> File dir, <span class="keyword">final</span> <span class="keyword">boolean</span> removeDir, <span class="keyword">final</span> FileFilter filter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dir != <span class="keyword">null</span> &amp;&amp; dir.isDirectory()) &#123;</span><br><span class="line">            <span class="keyword">final</span> File[] files = dir.listFiles(filter);</span><br><span class="line">            <span class="keyword">if</span> (files != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">final</span> File file : files) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">                        deleteDir(file, removeDir, filter);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        file.delete();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (removeDir) &#123;</span><br><span class="line">                dir.delete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete a specified directory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir       the directory to clean.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> removeDir true to remove the &#123;<span class="doctag">@code</span> dir&#125;.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filter    the filter to determine which file or directory to delete.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteDir</span><span class="params">(<span class="keyword">final</span> File dir, <span class="keyword">final</span> <span class="keyword">boolean</span> removeDir, <span class="keyword">final</span> FilenameFilter filter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dir != <span class="keyword">null</span> &amp;&amp; dir.isDirectory()) &#123;</span><br><span class="line">            <span class="keyword">final</span> File[] files = dir.listFiles(filter);</span><br><span class="line">            <span class="keyword">if</span> (files != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">final</span> File file : files) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">                        deleteDir(file, removeDir, filter);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        file.delete();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (removeDir) &#123;</span><br><span class="line">                dir.delete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * compute the size of one folder</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dir</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the byte length for the folder</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">computeFolderSize</span><span class="params">(<span class="keyword">final</span> File dir)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dir == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> dirSize = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">final</span> File[] files = dir.listFiles();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != files) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; files.length; i++) &#123;</span><br><span class="line">                <span class="keyword">final</span> File file = files[i];</span><br><span class="line">                <span class="keyword">if</span> (file.isFile()) &#123;</span><br><span class="line">                    dirSize += file.length();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">                    dirSize += file.length();</span><br><span class="line">                    dirSize += computeFolderSize(file);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dirSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Retrieve the main file name.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path the file name.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the main file name without the extension.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFileNameWithoutExtensionByPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(path)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getFileNameWithoutExtension(<span class="keyword">new</span> File(path));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Helper method to get a filename without its extension</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFileNameWithoutExtension</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">        String name = fileName;</span><br><span class="line">        <span class="keyword">int</span> index = fileName.lastIndexOf(<span class="string">'.'</span>);</span><br><span class="line">        <span class="keyword">if</span> (index != -<span class="number">1</span>) &#123;</span><br><span class="line">            name = fileName.substring(<span class="number">0</span>, index);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Retrieve the main file name.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file the file.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the main file name without the extension.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFileNameWithoutExtension</span><span class="params">(<span class="keyword">final</span> File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == file) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String fileName = file.getName();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> index = fileName.lastIndexOf(<span class="string">'.'</span>);</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            fileName = fileName.substring(<span class="number">0</span>, index);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Retrieve the main file name.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path the file name.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the extension of the file.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getExtension</span><span class="params">(<span class="keyword">final</span> String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(path)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getExtension(<span class="keyword">new</span> File(path));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Retrieve the extension of the file.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file the file.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the extension of the file.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getExtension</span><span class="params">(<span class="keyword">final</span> File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == file) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> String fileName = file.getName();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> index = fileName.lastIndexOf(<span class="string">'.'</span>);</span><br><span class="line">        String extension = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            extension = fileName.substring(index + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> extension;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文件是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">existsFile</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(path)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> existsFile(<span class="keyword">new</span> File(path));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文件是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">existsFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file != <span class="keyword">null</span> &amp;&amp; file.exists() &amp;&amp; file.isFile();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete file if exist path</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path the path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if this file was deleted, false otherwise.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteFileIfExist</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(path)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            <span class="keyword">return</span> file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete file if exist file</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file the file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if this file was deleted, false otherwise.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteFileIfExist</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            <span class="keyword">return</span> file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write the specified content to an specified file.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeToFile</span><span class="params">(File file, String content)</span> </span>&#123;</span><br><span class="line">        writeToFile(file, content, <span class="keyword">false</span>, <span class="string">"utf-8"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write the specified content to an specified file.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> append</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeToFile</span><span class="params">(File file, String content, <span class="keyword">boolean</span> append)</span> </span>&#123;</span><br><span class="line">        writeToFile(file, content, append, <span class="string">"utf-8"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write the specified content to an specified file.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> encoding</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeToFile</span><span class="params">(File file, String content, String encoding)</span> </span>&#123;</span><br><span class="line">        writeToFile(file, content, <span class="keyword">false</span>, encoding);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write the specified content to an specified file.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> append</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> encoding</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeToFile</span><span class="params">(File file, String content, <span class="keyword">boolean</span> append, String encoding)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="keyword">null</span> || TextUtils.isEmpty(content)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ensureParent(file);</span><br><span class="line">        OutputStreamWriter writer = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writer = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(file, append), encoding);</span><br><span class="line">            writer.write(content);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IoUtils.closeQuietly(writer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write the specified data to an specified file.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file The file to write into.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data The data to write. May be null.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">writeToFile</span><span class="params">(File file, <span class="keyword">byte</span>[] data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="keyword">null</span> || data == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ensureParent(file);</span><br><span class="line">        FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            fos.write(data);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IoUtils.closeQuietly(fos);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write the specified input stream to an specified file. Use NIO</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> is</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> target</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeToFileNio</span><span class="params">(InputStream is, File target)</span> </span>&#123;</span><br><span class="line">        FileOutputStream fo = <span class="keyword">null</span>;</span><br><span class="line">        ReadableByteChannel src = <span class="keyword">null</span>;</span><br><span class="line">        FileChannel out = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> len = is.available();</span><br><span class="line">            src = Channels.newChannel(is);</span><br><span class="line">            fo = <span class="keyword">new</span> FileOutputStream(target);</span><br><span class="line">            out = fo.getChannel();</span><br><span class="line">            out.transferFrom(src, <span class="number">0</span>, len);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IoUtils.closeQuietly(fo);</span><br><span class="line">            IoUtils.closeQuietly(src);</span><br><span class="line">            IoUtils.closeQuietly(out);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write the specified data to an specified file.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeToFileNio</span><span class="params">(File target, <span class="keyword">byte</span>[] data)</span> </span>&#123;</span><br><span class="line">        FileOutputStream fo = <span class="keyword">null</span>;</span><br><span class="line">        ReadableByteChannel src = <span class="keyword">null</span>;</span><br><span class="line">        FileChannel out = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            src = Channels.newChannel(<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">            fo = <span class="keyword">new</span> FileOutputStream(target);</span><br><span class="line">            out = fo.getChannel();</span><br><span class="line">            out.transferFrom(src, <span class="number">0</span>, data.length);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IoUtils.closeQuietly(fo);</span><br><span class="line">            IoUtils.closeQuietly(src);</span><br><span class="line">            IoUtils.closeQuietly(out);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read text file</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">readFileText</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(path)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> readFileText(<span class="keyword">new</span> File(path));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read text file</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">readFileText</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (existsFile(file)) &#123;</span><br><span class="line">            FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">                <span class="keyword">return</span> IoUtils.loadContent(fis);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                IoUtils.closeQuietly(fis);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read text file</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> charsetName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">readFileText</span><span class="params">(String path, String charsetName)</span> </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> FileInputStream(path);</span><br><span class="line">            <span class="keyword">return</span> IoUtils.loadContent(fis, charsetName);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IoUtils.closeQuietly(fis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read file</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] readFileBytes(File file) &#123;</span><br><span class="line">        <span class="keyword">if</span> (existsFile(file)) &#123;</span><br><span class="line">            FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">                <span class="keyword">return</span> IoUtils.loadBytes(fis);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                IoUtils.closeQuietly(fis);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read config file</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title">readConfig</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        String text = readFileText(file);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(text)) &#123;</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] lines = text.split(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (String line : lines) &#123;</span><br><span class="line">            line = line.trim();</span><br><span class="line">            <span class="keyword">if</span> (TextUtils.isEmpty(line)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (line.startsWith(<span class="string">"#"</span>)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String[] array = line.split(<span class="string">"="</span>, <span class="number">2</span>);</span><br><span class="line">            map.put(array[<span class="number">0</span>].trim(), array[<span class="number">1</span>].trim());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Open new file out put</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> FileOutputStream <span class="title">openNewFileOutput</span><span class="params">(File file)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        deleteFileIfExist(file);</span><br><span class="line">        ensureParent(file);</span><br><span class="line">        file.createNewFile();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get user directory</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">getUserDir</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String path = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> File(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get user home directory</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">getUserHome</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String path = System.getProperty(<span class="string">"user.home"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> File(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      多进程, 延迟
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="文件" scheme="/tags/%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>网络</title>
    <link href="/2020/02/11/Android/%E7%B3%BB%E7%BB%9F/Net/"/>
    <id>/2020/02/11/Android/系统/Net/</id>
    <published>2020-02-11T07:38:28.000Z</published>
    <updated>2020-02-11T07:38:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单GET"><a href="#简单GET" class="headerlink" title="简单GET"></a>简单GET</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line">String re = IOUtils.toString(<span class="keyword">new</span> URL(<span class="string">"https://www.baidu.com/"</span>), StandardCharsets.UTF_8);</span><br></pre></td></tr></table></figure><h3 id="无法访问HTTP问题"><a href="#无法访问HTTP问题" class="headerlink" title="无法访问HTTP问题"></a>无法访问HTTP问题</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--AndroidManifest.xml</span></span><br><span class="line"><span class="comment">补充 android:networkSecurityConfig</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:networkSecurityConfig</span>=<span class="string">"@xml/network_security_config"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--network_security_config.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="android-async-http-httpclient"><a href="#android-async-http-httpclient" class="headerlink" title="android-async-http / httpclient"></a>android-async-http / httpclient</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cz.msebera.android.httpclient.Header;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.loopj.android.http.AsyncHttpClient;</span><br><span class="line"><span class="keyword">import</span> com.loopj.android.http.AsyncHttpResponseHandler;</span><br><span class="line"><span class="keyword">import</span> com.loopj.android.http.RequestParams;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// http post</span></span><br><span class="line">    RequestParams requestParams = <span class="keyword">new</span> RequestParams();</span><br><span class="line">    requestParams.put(<span class="string">"username"</span>, <span class="string">"abc"</span>);</span><br><span class="line">    requestParams.put(<span class="string">"password"</span>, <span class="string">"123"</span>);</span><br><span class="line"></span><br><span class="line">    AsyncHttpClient client = <span class="keyword">new</span> AsyncHttpClient();</span><br><span class="line">    client.post(<span class="string">"https://*/test.php"</span>, requestParams, <span class="keyword">new</span> AsyncHttpResponseHandler() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(<span class="keyword">int</span> statusCode, Header[] headers, <span class="keyword">byte</span>[] responseBody)</span> </span>&#123;</span><br><span class="line">            Log.d(TAG, <span class="keyword">new</span> String(responseBody));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> statusCode, Header[] headers, <span class="keyword">byte</span>[] responseBytes, Throwable throwable)</span> </span>&#123;</span><br><span class="line">            Log.d(TAG, <span class="string">"onFailure"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinish</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onFinish();</span><br><span class="line">            Log.d(TAG, <span class="string">"onFinish"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// get</span></span><br><span class="line">RequestParams requestParams = <span class="keyword">new</span> RequestParams();</span><br><span class="line">    requestParams.put(<span class="string">"username"</span>, <span class="string">"abc"</span>);</span><br><span class="line">    requestParams.put(<span class="string">"password"</span>, <span class="string">"123"</span>);</span><br><span class="line">    client.get(url, requestParams, jsonHttpResponseHandler );</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 请求参数定义1：</span></span><br><span class="line">RequestParams params=<span class="keyword">new</span> RequestParams(<span class="string">"single"</span>,<span class="string">"value"</span>);</span><br><span class="line"><span class="comment">// 请求参数定义2：</span></span><br><span class="line">HashMap&lt;String,String&gt; paramMap=<span class="keyword">new</span> HashMap&lt;String,String&gt;();</span><br><span class="line">paramMap.put(<span class="string">"key"</span>,<span class="string">"value"</span>);</span><br><span class="line">RequestParams params=<span class="keyword">new</span> RequestParams(paramMap);</span><br></pre></td></tr></table></figure><h3 id="android-async-http-上传文件"><a href="#android-async-http-上传文件" class="headerlink" title="android-async-http / 上传文件"></a>android-async-http / 上传文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 文件流</span></span><br><span class="line">InputStream myInputStream = <span class="keyword">new</span> ByteArrayInputStream(<span class="string">"asdf"</span>.getBytes());</span><br><span class="line">RequestParams params=<span class="keyword">new</span> RequestParams();</span><br><span class="line">params.put(<span class="string">"secret_passwords"</span>, myInputStream, <span class="string">"password.txt"</span>);</span><br><span class="line">params.put(<span class="string">"secret_passwords"</span>, myInputStream, <span class="string">"test.jpg"</span>, <span class="string">"image/jpeg"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件对象</span></span><br><span class="line">RequestParams params=<span class="keyword">new</span> RequestParams();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    params.put(<span class="string">"timg.jpg"</span>, <span class="keyword">new</span> File(path));</span><br><span class="line">    params.put(<span class="string">"timg.jpg"</span>, <span class="keyword">new</span> File(path), <span class="string">"image/jpeg"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 文本数据</span></span><br><span class="line"><span class="comment">// JsonHttpResponseHandler, TextHttpResponseHandler</span></span><br><span class="line">client.post(<span class="string">"https://*/test.php"</span>, requestParams, <span class="keyword">new</span> AsyncHttpResponseHandler() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(<span class="keyword">int</span> statusCode, Header[] headers, <span class="keyword">byte</span>[] responseBody)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> statusCode, Header[] headers, <span class="keyword">byte</span>[] responseBytes, Throwable throwable)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 文件下载</span></span><br><span class="line">client.post(<span class="string">"https://**"</span>, requestParams, <span class="keyword">new</span> FileAsyncHttpResponseHandler(<span class="keyword">new</span> File(path)) &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(<span class="keyword">int</span> statusCode, Header[] headers, File file)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> statusCode, Header[] headers,Throwable throwable, File file)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="APP升级"><a href="#APP升级" class="headerlink" title="APP升级"></a>APP升级</h2><ul><li><a href="https://weiku.co/article/318/" target="_blank" rel="noopener">自动升级组件</a></li><li><a href="https://github.com/MZCretin/AutoUpdateProject" target="_blank" rel="noopener">AutoUpdateProject</a></li></ul>]]></content>
    
    <summary type="html">
    
      网络, NET, HTTP
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="网络" scheme="/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>多进程</title>
    <link href="/2020/02/11/Android/%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B/"/>
    <id>/2020/02/11/Android/系统/进程/</id>
    <published>2020-02-11T07:38:28.000Z</published>
    <updated>2020-02-11T07:38:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单延迟"><a href="#简单延迟" class="headerlink" title="简单延迟"></a>简单延迟</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Handler().postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure><h2 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h2><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2>]]></content>
    
    <summary type="html">
    
      多进程, 延迟
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="多进程" scheme="/tags/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="延迟" scheme="/tags/%E5%BB%B6%E8%BF%9F/"/>
    
  </entry>
  
  <entry>
    <title>模块</title>
    <link href="/2020/02/09/Android/%E6%A8%A1%E5%9D%97/"/>
    <id>/2020/02/09/Android/模块/</id>
    <published>2020-02-09T05:25:34.000Z</published>
    <updated>2020-02-09T05:25:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通用模块"><a href="#通用模块" class="headerlink" title="通用模块"></a>通用模块</h2><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">// build.gradle(app)</span></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    implementation <span class="string">'androidx.appcompat:appcompat:1.1.0'</span></span><br><span class="line">    implementation <span class="string">'androidx.constraintlayout:constraintlayout:1.1.3'</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">'org.apache.commons'</span>, name: <span class="string">'commons-collections4'</span>, version: <span class="string">'4.4'</span></span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">'commons-io'</span>, name: <span class="string">'commons-io'</span>, version: <span class="string">'2.6'</span></span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">'com.google.code.gson'</span>, name: <span class="string">'gson'</span>, version: <span class="string">'2.8.6'</span></span><br><span class="line"></span><br><span class="line">    implementation(<span class="keyword">project</span>(<span class="string">':picture_library'</span>)) &#123;</span><br><span class="line">        <span class="keyword">exclude</span> <span class="keyword">group</span>: <span class="string">'com.xxx.xxx.Test.java'</span>, module: <span class="string">'testModule'</span>    <span class="comment">// 排除</span></span><br><span class="line">        transitive = <span class="keyword">false</span>      <span class="comment">// 禁止依赖传递</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三方SO模块加载"><a href="#第三方SO模块加载" class="headerlink" title="第三方SO模块加载"></a>第三方SO模块加载</h2><ul><li>新建工程默认带有Libs路径<ul><li>Project：Android-&gt;app-&gt;jniLibs</li><li>右键打开文件夹位置，新建armeabi或armeabi-v7a把so文件复制进去就行<ul><li>libs\armeabi*.so</li><li>libs\armeabi-v7a*.so</li></ul></li><li>如果是jar或者aar直接放目录下即可</li></ul></li></ul><h3 id="SO加载路径配置"><a href="#SO加载路径配置" class="headerlink" title="SO加载路径配置"></a>SO加载路径配置</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">// build.gradle(app)</span></span><br><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// SO 加载路径</span></span><br><span class="line">    <span class="keyword">sourceSets</span> &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            <span class="comment">// jniLibs.srcDirs = ['libs', "src/main/jniLibs"]</span></span><br><span class="line">            jniLibs.srcDirs = [<span class="string">'libs'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// jar|aar 加载路径</span></span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        <span class="keyword">flatDir</span> &#123;</span><br><span class="line">            dirs <span class="string">'libs'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第三方aar</span></span><br><span class="line">    api(name: <span class="string">'mytest-debug'</span>, ext: <span class="string">'aar'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自己的aar项目，可以直接饮用</span></span><br><span class="line">    api <span class="keyword">project</span>(path: <span class="string">':myarr'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// implementation: 表示依赖，但打包时不打包进来</span></span><br><span class="line">    <span class="comment">// api: 表示打包，即 不仅依赖还打包进来，这样上层就不用重复依赖</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SO加载"><a href="#SO加载" class="headerlink" title="SO加载"></a>SO加载</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// MyTest.java</span></span><br><span class="line"><span class="comment">// 一般SO提供方会明确package 和接口声明</span></span><br><span class="line"><span class="keyword">package</span> com.my.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">(<span class="keyword">byte</span>[] paramArrayOfbyte, <span class="keyword">int</span> paramInt)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">(<span class="keyword">byte</span>[] paramArrayOfbyte, <span class="keyword">int</span> paramInt)</span></span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">"MyTest"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="混淆"><a href="#混淆" class="headerlink" title="混淆"></a>混淆</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># build.gradle(app)</span><br><span class="line">android &#123;</span><br><span class="line">    # 编译配置</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">true</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android-optimize.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-keep class com.es.idcardsdk.MYSdk &#123;</span><br><span class="line">    public *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 去掉日志</span><br><span class="line">-assumenosideeffects class android.util.Log&#123;</span><br><span class="line">    public static *** v(...);</span><br><span class="line">    public static *** i(...);</span><br><span class="line">    public static *** d(...);</span><br><span class="line">    public static *** w(...);</span><br><span class="line">    public static *** e(...);</span><br><span class="line">&#125;</span><br><span class="line"># 第三方公共库</span><br><span class="line">-keep class org.apache.commons.** &#123;*;&#125;</span><br><span class="line">-keep class com.google.** &#123;*;&#125;</span><br><span class="line">-keep class cz.msebera.** &#123;*;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 复制于百度Demo：proguard-rules.pro</span><br><span class="line"></span><br><span class="line">## ==========================================</span><br><span class="line">## 通用设置</span><br><span class="line">## ==========================================</span><br><span class="line">## 压缩优化算法</span><br><span class="line">#-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*</span><br><span class="line">## 迭代优化次数</span><br><span class="line">#-optimizationpasses 5</span><br><span class="line">## 禁止优化</span><br><span class="line">#-dontoptimize</span><br><span class="line">## 禁止缩减代码</span><br><span class="line">#-dontshrink</span><br><span class="line">## 禁止多样化类名</span><br><span class="line">#-dontusemixedcaseclassnames</span><br><span class="line">## 禁止混淆公共LIB类</span><br><span class="line">#-dontskipnonpubliclibraryclasses</span><br><span class="line">## 禁止预先验证</span><br><span class="line">#-dontpreverify</span><br><span class="line">## 忽略警告信息</span><br><span class="line">#-ignorewarnings</span><br><span class="line">## 输出详细LOG</span><br><span class="line">#-verbose</span><br><span class="line">## 保持@JavascriptInterface annotations 不被混淆掉</span><br><span class="line">#-keepattributes *Annotation*</span><br><span class="line">#</span><br><span class="line">## 禁止混淆类</span><br><span class="line">#-keep public class * extends android.app.Activity</span><br><span class="line">#-keep public class * extends android.app.Application</span><br><span class="line">#-keep public class * extends android.app.Service</span><br><span class="line">#-keep public class * extends android.content.BroadcastReceiver</span><br><span class="line">#-keep public class * extends android.content.ContentProvider</span><br><span class="line">#-keep public class com.android.vending.licensing.ILicensingService</span><br><span class="line">#-keep public class * extends android.app.Activity</span><br><span class="line">#</span><br><span class="line">## 禁止混淆本地方法</span><br><span class="line">#-keepclasseswithmembernames class * &#123;</span><br><span class="line">#    native &lt;methods&gt;;</span><br><span class="line">#&#125;</span><br><span class="line">#</span><br><span class="line">## 禁止混淆枚举类型</span><br><span class="line">#-keepclassmembers,allowoptimization enum * &#123;</span><br><span class="line">#    public static **[] values();</span><br><span class="line">#    public static ** valueOf(java.lang.String);</span><br><span class="line">#&#125;</span><br><span class="line">#</span><br><span class="line">## 禁止混淆初始化方法</span><br><span class="line">#-keepclasseswithmembers class * &#123;</span><br><span class="line">#    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">#&#125;</span><br><span class="line">#-keepclasseswithmembers class * &#123;</span><br><span class="line">#    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">#&#125;</span><br><span class="line">#</span><br><span class="line">## 禁止混淆Parcelable对象</span><br><span class="line">#-keepclassmembers class * implements android.os.Parcelable &#123;</span><br><span class="line">#    static android.os.Parcelable$Creator CREATOR;</span><br><span class="line">#&#125;</span><br><span class="line">#</span><br><span class="line">## 禁止混淆Serializable对象</span><br><span class="line">#-keepnames class * implements java.io.Serializable</span><br><span class="line">#-keepclassmembers class * implements java.io.Serializable &#123;</span><br><span class="line">#    static final long serialVersionUID;</span><br><span class="line">#    private static final java.io.ObjectStreamField[] serialPersistentFields;</span><br><span class="line">#    !static !transient &lt;fields&gt;;</span><br><span class="line">#    private void writeObject(java.io.ObjectOutputStream);</span><br><span class="line">#    private void readObject(java.io.ObjectInputStream);</span><br><span class="line">#    java.lang.Object writeReplace();</span><br><span class="line">#    java.lang.Object readResolve();</span><br><span class="line">#&#125;</span><br><span class="line">#</span><br><span class="line">## 禁止混淆二维码解析SDK</span><br><span class="line">##-libraryjars libs/facesdk.jar</span><br><span class="line">#-dontwarn com.baidu.idl.facesdk.FaceInfo</span><br><span class="line">#-dontwarn com.baidu.idl.facesdk.FaceSDK</span><br><span class="line">#-dontwarn com.baidu.idl.facesdk.FaceTracker</span><br><span class="line">#-dontwarn com.baidu.idl.facesdk.FaceVerifyData</span><br><span class="line">#-keep class com.baidu.idl.facesdk.FaceInfo &#123; *; &#125;</span><br><span class="line">#-keep class com.baidu.idl.facesdk.FaceSDK &#123; *; &#125;</span><br><span class="line">#-keep class com.baidu.idl.facesdk.FaceTracker &#123; *; &#125;</span><br><span class="line">#-keep class com.baidu.idl.facesdk.FaceVerifyData &#123; *; &#125;</span><br><span class="line">#</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#############################################</span><br><span class="line">#</span><br><span class="line"># 对于一些基本指令的添加</span><br><span class="line">#</span><br><span class="line">#############################################</span><br><span class="line"># 代码混淆压缩比，在0~7之间，默认为5，一般不做修改</span><br><span class="line">-optimizationpasses 5</span><br><span class="line"></span><br><span class="line"># 混合时不使用大小写混合，混合后的类名为小写</span><br><span class="line">-dontusemixedcaseclassnames</span><br><span class="line"></span><br><span class="line"># 指定不去忽略非公共库的类</span><br><span class="line">-dontskipnonpubliclibraryclasses</span><br><span class="line"></span><br><span class="line"># 这句话能够使我们的项目混淆后产生映射文件</span><br><span class="line"># 包含有类名-&gt;混淆后类名的映射关系</span><br><span class="line">-verbose</span><br><span class="line"></span><br><span class="line"># 指定不去忽略非公共库的类成员</span><br><span class="line">-dontskipnonpubliclibraryclassmembers</span><br><span class="line"></span><br><span class="line"># 不做预校验，preverify是proguard的四个步骤之一，Android不需要preverify，去掉这一步能够加快混淆速度。</span><br><span class="line">-dontpreverify</span><br><span class="line"></span><br><span class="line"># 保留Annotation不混淆</span><br><span class="line">-keepattributes *Annotation*,InnerClasses</span><br><span class="line"></span><br><span class="line"># 避免混淆泛型</span><br><span class="line">-keepattributes Signature</span><br><span class="line"></span><br><span class="line"># 抛出异常时保留代码行号</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line"></span><br><span class="line"># 指定混淆是采用的算法，后面的参数是一个过滤器</span><br><span class="line"># 这个过滤器是谷歌推荐的算法，一般不做更改</span><br><span class="line">-optimizations !code/simplification/cast,!field/*,!class/merging/*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#############################################</span><br><span class="line">#</span><br><span class="line"># Android开发中一些需要保留的公共部分</span><br><span class="line">#</span><br><span class="line">#############################################</span><br><span class="line"></span><br><span class="line"># 保留我们使用的四大组件，自定义的Application等等这些类不被混淆</span><br><span class="line"># 因为这些子类都有可能被外部调用</span><br><span class="line">-keep public class * extends android.app.Activity</span><br><span class="line">-keep public class * extends android.app.Appliction</span><br><span class="line">-keep public class * extends android.app.Service</span><br><span class="line">-keep public class * extends android.content.BroadcastReceiver</span><br><span class="line">-keep public class * extends android.content.ContentProvider</span><br><span class="line">-keep public class * extends android.app.backup.BackupAgentHelper</span><br><span class="line">-keep public class * extends android.preference.Preference</span><br><span class="line">-keep public class * extends android.view.View</span><br><span class="line">-keep public class com.android.vending.licensing.ILicensingService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 保留support下的所有类及其内部类</span><br><span class="line">-keep class android.support.** &#123;*;&#125;</span><br><span class="line"></span><br><span class="line"># 保留继承的</span><br><span class="line">-keep public class * extends android.support.v4.**</span><br><span class="line">-keep public class * extends android.support.v7.**</span><br><span class="line">-keep public class * extends android.support.annotation.**</span><br><span class="line"></span><br><span class="line"># 保留R下面的资源</span><br><span class="line">-keep class **.R$* &#123;*;&#125;</span><br><span class="line"></span><br><span class="line"># 保留本地native方法不被混淆</span><br><span class="line">-keepclasseswithmembernames class * &#123;</span><br><span class="line">    native &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留在Activity中的方法参数是view的方法，</span><br><span class="line"># 这样以来我们在layout中写的onClick就不会被影响</span><br><span class="line">-keepclassmembers class * extends android.app.Activity&#123;</span><br><span class="line">    public void *(android.view.View);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留枚举类不被混淆</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留我们自定义控件（继承自View）不被混淆</span><br><span class="line">-keep public class * extends android.view.View&#123;</span><br><span class="line">    *** get*();</span><br><span class="line">    void set*(***);</span><br><span class="line">    public &lt;init&gt;(android.content.Context);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留Parcelable序列化类不被混淆</span><br><span class="line">-keep class * implements android.os.Parcelable &#123;</span><br><span class="line">    public static final android.os.Parcelable$Creator *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留Serializable序列化的类不被混淆</span><br><span class="line">-keepclassmembers class * implements java.io.Serializable &#123;</span><br><span class="line">    static final long serialVersionUID;</span><br><span class="line">    private static final java.io.ObjectStreamField[] serialPersistentFields;</span><br><span class="line">    !static !transient &lt;fields&gt;;</span><br><span class="line">    !private &lt;fields&gt;;</span><br><span class="line">    !private &lt;methods&gt;;</span><br><span class="line">    private void writeObject(java.io.ObjectOutputStream);</span><br><span class="line">    private void readObject(java.io.ObjectInputStream);</span><br><span class="line">    java.lang.Object writeReplace();</span><br><span class="line">    java.lang.Object readResolve();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 对于带有回调函数的onXXEvent、**On*Listener的，不能被混淆</span><br><span class="line">-keepclassmembers class * &#123;</span><br><span class="line">    void *(**On*Event);</span><br><span class="line">    void *(**On*Listener);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># webView处理，项目中没有使用到webView忽略即可</span><br><span class="line">-keepclassmembers class fqcn.of.javascript.interface.for.webview &#123;</span><br><span class="line">    public *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.WebView, java.lang.String, android.graphics.Bitmap);</span><br><span class="line">    public boolean *(android.webkit.WebView, java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.webView, jav.lang.String);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      so
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="so" scheme="/tags/so/"/>
    
  </entry>
  
  <entry>
    <title>Service</title>
    <link href="/2020/02/08/Android/%E6%8E%A7%E4%BB%B6/Service/"/>
    <id>/2020/02/08/Android/控件/Service/</id>
    <published>2020-02-08T11:18:01.000Z</published>
    <updated>2020-02-08T11:18:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--AndroidManifest.xml：&lt;activity&gt; 同级注册服务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">".MyService"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">...</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// MyService.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">"test"</span>, <span class="string">"onBind"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">"test"</span>, <span class="string">"onCreate"</span>);</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(<span class="keyword">final</span> Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">"test"</span>, <span class="string">"onStartCommand"</span>);</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">"服务已经启动"</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">        <span class="comment">// 参数</span></span><br><span class="line">        String action = intent.getAction();</span><br><span class="line">        <span class="keyword">boolean</span> debug = intent.getStringExtra(<span class="string">"DEBUG"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">"test"</span>, <span class="string">"onDestroy"</span>);</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 启动</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">// 指令</span></span><br><span class="line">intent.setAction(<span class="string">"START_READ_IDCARD"</span>);</span><br><span class="line"><span class="comment">// 参数</span></span><br><span class="line">intent.putExtra(<span class="string">"DEBUG"</span>, <span class="keyword">true</span>);</span><br><span class="line">startService(intent);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Service
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="Service" scheme="/tags/Service/"/>
    
  </entry>
  
  <entry>
    <title>WebView</title>
    <link href="/2020/02/07/Android/%E6%8E%A7%E4%BB%B6/WebView/"/>
    <id>/2020/02/07/Android/控件/WebView/</id>
    <published>2020-02-07T14:12:34.000Z</published>
    <updated>2020-02-07T14:12:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--AndroidManifest.xml：联网权限--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Activity.java</span></span><br><span class="line">mWebView.setWebViewClient(<span class="keyword">new</span> WebViewClient() &#123;</span><br><span class="line">    <span class="comment">// 设置在webView点击打开的新网页在当前界面显示,而不跳转到新的浏览器中</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">        view.loadUrl(url);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, WebResourceRequest request)</span> </span>&#123;</span><br><span class="line">        view.loadUrl(request.getUrl().toString());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 页面加载完成事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageFinished</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置WebView属性,运行执行js脚本</span></span><br><span class="line">mWebView.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line"><span class="comment">// 调用loadUrl方法为WebView加入链接</span></span><br><span class="line">mWebView.loadUrl(<span class="string">"https://www.baidu.com/"</span>);</span><br><span class="line">mWebView.loadUrl(<span class="string">"file:///android_asset/html/idcard.html"</span>);</span><br></pre></td></tr></table></figure><h2 id="常用API"><a href="#常用API" class="headerlink" title="常用API"></a>常用API</h2><ul><li><code>WebViewClient</code> 常用方法</li><li><code>WebChromeClient</code> 常用方法</li></ul><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><ul><li><code>setAllowFileAccess</code> 启用或禁止WebView访问文件数据</li><li><code>setBlockNetworkImage</code> 是否显示网络图像</li><li><code>setBuiltInZoomControls</code> 设置是否支持缩放</li><li><code>setCacheMode</code> 设置缓冲的模式</li><li><code>setDefaultFontSize</code> 设置默认的字体大小</li><li><code>setDefaultTextEncodingName</code> 设置在解码时使用的默认编码</li><li><code>setFixedFontFamily</code> 设置固定使用的字体</li><li><code>setJavaSciptEnabled</code> 设置是否支持Javascript</li><li><code>setLayoutAlgorithm</code> 设置布局方式</li><li><code>setLightTouchEnabled</code> 设置用鼠标激活被选项</li><li><code>setSupportZoom</code> 设置是否支持缩放</li><li><a href="https://www.jianshu.com/p/0d7d429bd216" target="_blank" rel="noopener">WebView控件之WebSettings详解</a></li></ul><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><ul><li><code>doUpdate</code> VisitedHistory 更新历史记录</li><li><code>onFormResubmission</code> 应用程序重新请求网页数据</li><li><code>onLoadResource</code> 加载指定地址提供的资源</li><li><code>onPageFinished</code> 网页加载完毕</li><li><code>onPageStarted</code> 网页开始加载</li><li><code>onReceivedError</code> 报告错误信息</li><li><code>onScaleChanged</code> WebView发生改变</li><li><code>shouldOverrideUrlLoading</code> 控制新的连接在当前WebView中打开</li><li><code>onCloseWindow</code> 关闭WebView</li><li><code>onCreateWindow</code> 创建WebView</li><li><code>onJsAlert</code> 处理Javascript中的Alert对话框</li><li><code>onJsConfirm</code> 处理Javascript中的Confirm对话框</li><li><code>onJsPrompt</code> 处理Javascript中的Prompt对话框</li><li><code>onProgressChanged</code> 加载进度条改变</li><li><code>onReceivedlcon</code> 网页图标更改</li><li><code>onReceivedTitle</code> 网页Title更改</li><li><code>onRequestFocus</code> WebView显示焦点</li></ul><h2 id="交互"><a href="#交互" class="headerlink" title="交互"></a>交互</h2><p><a href="https://blog.csdn.net/carson_ho/article/details/64904691/" target="_blank" rel="noopener">WebView与JS交互</a></p><h3 id="Android调用JS"><a href="#Android调用JS" class="headerlink" title="Android调用JS"></a>Android调用JS</h3><ul><li>通过WebView的loadUrl（）</li><li>通过WebView的evaluateJavascript（）</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">  // 使用安卓注入对象，发送消息到安卓，并接收返回值</span><br><span class="line">  function sendToAndroid(msg) &#123;</span><br><span class="line">    document.getElementById("text").innerHTML = androidObject.send(msg);</span><br><span class="line">  &#125;</span><br><span class="line">  // 安卓可直接调用JS函数，并反馈</span><br><span class="line">  function androidCall(msg) &#123;</span><br><span class="line">    document.getElementById("text").innerHTML = msg;</span><br><span class="line">    return 'ok';</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"InWebView!"</span> <span class="attr">onclick</span>=<span class="string">"sendToAndroid('In Android land')"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安卓调用JS androidCall函数，并接收返回值</span></span><br><span class="line">mWebView.evaluateJavascript(<span class="string">"javascript:androidCall('androidCall')"</span>, <span class="keyword">new</span> ValueCallback&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceiveValue</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">"test"</span>, <span class="string">"onReceiveValue: "</span> + value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 注入JS对象，提供JS调用接口</span></span><br><span class="line">mWebView.addJavascriptInterface(<span class="keyword">new</span> Object() &#123;</span><br><span class="line">    <span class="meta">@JavascriptInterface</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">send</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">"test"</span>, <span class="string">"js send: "</span> + msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"send"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="string">"androidObject"</span>);</span><br></pre></td></tr></table></figure><h3 id="JS调用Android"><a href="#JS调用Android" class="headerlink" title="JS调用Android"></a>JS调用Android</h3><ul><li>通过<code>WebView</code>的<code>addJavascriptInterface()</code>进行对象映射</li><li>通过<code>WebViewClient</code>的<code>shouldOverrideUrlLoading()</code>方法回调拦截 url</li><li>通过<code>WebChromeClient</code>的<code>onJsAlert()</code>、<code>onJsConfirm()</code>、<code>onJsPrompt()</code>方法回调拦截JS对话框<code>alert()</code>、<code>confirm()</code>、<code>prompt()</code>消息</li></ul><h2 id="AgentWeb"><a href="#AgentWeb" class="headerlink" title="AgentWeb"></a>AgentWeb</h2><p><a href="https://github.com/Justson/AgentWeb" target="_blank" rel="noopener">github:AgentWeb</a></p><h3 id="基础应用"><a href="#基础应用" class="headerlink" title="基础应用"></a>基础应用</h3>]]></content>
    
    <summary type="html">
    
      WebView
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="WebView" scheme="/tags/WebView/"/>
    
  </entry>
  
  <entry>
    <title>图片</title>
    <link href="/2020/02/07/Android/%E6%8E%A7%E4%BB%B6/BitmapUtil/"/>
    <id>/2020/02/07/Android/控件/BitmapUtil/</id>
    <published>2020-02-07T14:12:34.000Z</published>
    <updated>2020-02-07T14:12:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="baidu-BitmapUtil"><a href="#baidu-BitmapUtil" class="headerlink" title="baidu BitmapUtil"></a>baidu BitmapUtil</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2017 Baidu Inc. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.baidu.idl.face.platform.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap.CompressFormat;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Rect;</span><br><span class="line"><span class="keyword">import</span> android.media.ExifInterface;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这个类提供一些操作Bitmap的方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">BitmapUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Log TAG</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"ImageUtils"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存图片的质量：100</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> QUALITY = <span class="number">100</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图像的旋转方向是0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE0 = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图像的旋转方向是90</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE90 = <span class="number">90</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图像的旋转方向是180</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE180 = <span class="number">180</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图像的旋转方向是270</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE270 = <span class="number">270</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图像的旋转方向是360</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE360 = <span class="number">360</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片太大内存溢出后压缩的比例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PIC_COMPRESS_SIZE = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图像压缩边界</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMAGEBOUND = <span class="number">128</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片显示最大边的像素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXLENTH = <span class="number">1024</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认的最大尺寸</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_MAX_SIZE_CELL_NETWORK = <span class="number">600</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 题编辑wifi环境下压缩的最大尺寸</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> QUESTION_MAX_SIZE_CELL_NETWORK = <span class="number">1024</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片压缩的质量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> QUESTION_IMAGE_JPG_QUALITY = <span class="number">75</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认的图片压缩的质量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_IMAGE_JPG_QUALITY = <span class="number">50</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 网络请求超时时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CONNECTTIMEOUT = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String IMAGE_KEY_SUFFIX = <span class="string">"jpg"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_JPEG_QUALITY = <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Private constructor to prohibit nonsense instance creation.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">BitmapUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到要显示的图片数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context     Context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data        拍照保存的图片数据byte[]类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> orientation 图片方向</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Bitmap 返回显示的图片bitmap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createBitmap</span><span class="params">(Context context, <span class="keyword">byte</span>[] data, <span class="keyword">float</span> orientation)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">        Bitmap transformed = <span class="keyword">null</span>;</span><br><span class="line">        BitmapFactory.Options opts = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> width = DensityUtils.getDisplayWidth(context);</span><br><span class="line">            <span class="keyword">int</span> hight = DensityUtils.getDisplayHeight(context);</span><br><span class="line">            <span class="keyword">int</span> min = Math.min(width, hight);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">true</span>;</span><br><span class="line">            BitmapFactory.decodeByteArray(data, <span class="number">0</span>, data.length, opts);</span><br><span class="line">            opts.inSampleSize =</span><br><span class="line">                    BitmapUtils.computeSampleSize(opts, min, BitmapUtils.MAXLENTH * BitmapUtils.MAXLENTH);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = BitmapFactory.decodeByteArray(data, <span class="number">0</span>, data.length, opts);</span><br><span class="line">            transformed = BitmapUtils.rotateBitmap(orientation, bitmap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (bitmap != <span class="keyword">null</span> &amp;&amp; !bitmap.isRecycled()) &#123;</span><br><span class="line">                bitmap.recycle();</span><br><span class="line">                bitmap = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (transformed != <span class="keyword">null</span> &amp;&amp; !transformed.isRecycled()) &#123;</span><br><span class="line">                transformed.recycle();</span><br><span class="line">                transformed = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">true</span>;</span><br><span class="line">            BitmapFactory.decodeByteArray(data, <span class="number">0</span>, data.length, opts);</span><br><span class="line">            opts.inSampleSize =</span><br><span class="line">                    BitmapUtils.computeSampleSize(opts, -<span class="number">1</span>, opts.outWidth * opts.outHeight</span><br><span class="line">                            / BitmapUtils.PIC_COMPRESS_SIZE);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = BitmapFactory.decodeByteArray(data, <span class="number">0</span>, data.length, opts);</span><br><span class="line">            transformed = BitmapUtils.rotateBitmap(orientation, bitmap);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (transformed != bitmap &amp;&amp; bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bitmap.recycle();</span><br><span class="line">            bitmap = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据从数据中读到的方向旋转图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> orientation 图片方向</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap      要旋转的bitmap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 旋转后的图片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">rotateBitmap</span><span class="params">(<span class="keyword">float</span> orientation, Bitmap bitmap)</span> </span>&#123;</span><br><span class="line">        Bitmap transformed;</span><br><span class="line">        Matrix m = <span class="keyword">new</span> Matrix();</span><br><span class="line">        <span class="keyword">if</span> (orientation == <span class="number">0</span>) &#123;</span><br><span class="line">            transformed = bitmap;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            m.setRotate(orientation);</span><br><span class="line">            transformed = Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.getWidth(), bitmap.getHeight(), m, <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取无损压缩图片合适的压缩比例</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> options        图片的一些设置项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> minSideLength  最小边长</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxNumOfPixels 最大的像素数目</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回合适的压缩值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">computeSampleSize</span><span class="params">(BitmapFactory.Options options, <span class="keyword">int</span> minSideLength, <span class="keyword">int</span> maxNumOfPixels)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> initialSize = BitmapUtils.computeInitialSampleSize(options, minSideLength, maxNumOfPixels);</span><br><span class="line">        <span class="keyword">int</span> roundedSize;</span><br><span class="line">        <span class="keyword">if</span> (initialSize &lt;= <span class="number">8</span>) &#123; <span class="comment">// SUPPRESS CHECKSTYLE</span></span><br><span class="line">            roundedSize = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (roundedSize &lt; initialSize) &#123;</span><br><span class="line">                roundedSize &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            roundedSize = (initialSize + <span class="number">7</span>) / <span class="number">8</span> * <span class="number">8</span>; <span class="comment">// SUPPRESS CHECKSTYLE</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> roundedSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取无损压缩图片的压缩比</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> options        图片的一些设置项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> minSideLength  最小边长</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxNumOfPixels 最大的像素数目</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回合适的压缩值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">computeInitialSampleSize</span><span class="params">(BitmapFactory.Options options, <span class="keyword">int</span> minSideLength,</span></span></span><br><span class="line"><span class="function"><span class="params">                                               <span class="keyword">int</span> maxNumOfPixels)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> w = options.outWidth;</span><br><span class="line">        <span class="keyword">double</span> h = options.outHeight;</span><br><span class="line">        <span class="keyword">int</span> lowerBound = (maxNumOfPixels == -<span class="number">1</span>) ? <span class="number">1</span> : (<span class="keyword">int</span>) Math.ceil(Math.sqrt(w * h / maxNumOfPixels));</span><br><span class="line">        <span class="keyword">int</span> upperBound =</span><br><span class="line">                (minSideLength == -<span class="number">1</span>) ? BitmapUtils.IMAGEBOUND : (<span class="keyword">int</span>) Math.min(</span><br><span class="line">                        Math.floor(w / minSideLength), Math.floor(h / minSideLength));</span><br><span class="line">        <span class="keyword">if</span> (upperBound &lt; lowerBound) &#123;</span><br><span class="line">            <span class="keyword">return</span> lowerBound;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((maxNumOfPixels == -<span class="number">1</span>) &amp;&amp; (minSideLength == -<span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (minSideLength == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> lowerBound;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> upperBound;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析图片的旋转方向</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path 图片的路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 旋转角度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">decodeImageDegree</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> degree = ROTATE0;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ExifInterface exifInterface = <span class="keyword">new</span> ExifInterface(path);</span><br><span class="line">            <span class="keyword">int</span> orientation =</span><br><span class="line">                    exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION,</span><br><span class="line">                            ExifInterface.ORIENTATION_NORMAL);</span><br><span class="line">            <span class="keyword">switch</span> (orientation) &#123;</span><br><span class="line">                <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_90:</span><br><span class="line">                    degree = ROTATE90;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_180:</span><br><span class="line">                    degree = ROTATE180;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_270:</span><br><span class="line">                    degree = ROTATE270;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    degree = ROTATE0;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            degree = ROTATE0;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> degree;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap  图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> quality 生成的JPG的质量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxSize 最大边像素数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> base64编码的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">bitmapToJpegBase64</span><span class="params">(Bitmap bitmap, <span class="keyword">int</span> quality, <span class="keyword">float</span> maxSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">float</span> scale = maxSize / Math.max(bitmap.getWidth(), bitmap.getHeight());</span><br><span class="line">            <span class="keyword">if</span> (scale &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                bitmap = scale(bitmap, scale);</span><br><span class="line">            &#125;</span><br><span class="line">            ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            bitmap.compress(CompressFormat.JPEG, quality, out);</span><br><span class="line">            <span class="keyword">byte</span>[] data = out.toByteArray();</span><br><span class="line">            out.close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> Base64Utils.encodeToString(data, Base64Utils.NO_WRAP);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据图片类别设置图片最大SIZE和图片压缩质量</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context Context对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type    界面类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap  图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> base64编码的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">bitmapToJpegBase64</span><span class="params">(Context context, String type, Bitmap bitmap)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 图片最大SIZE</span></span><br><span class="line">        <span class="keyword">float</span> maxSize = getSizeParams(context, type) * <span class="number">1.0f</span>;</span><br><span class="line">        <span class="comment">// 图片压缩质量</span></span><br><span class="line">        <span class="keyword">int</span> quality = getQuealityParams(context, type);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">float</span> scale = maxSize / Math.max(bitmap.getWidth(), bitmap.getHeight());</span><br><span class="line">            <span class="keyword">if</span> (scale &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                bitmap = scale(bitmap, scale);</span><br><span class="line">            &#125;</span><br><span class="line">            ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            bitmap.compress(CompressFormat.JPEG, quality, out);</span><br><span class="line">            <span class="keyword">byte</span>[] data = out.toByteArray();</span><br><span class="line">            out.close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> Base64Utils.encodeToString(data, Base64Utils.NO_WRAP);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置图片大小</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context Context对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type    Category对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 压缩的图片大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSizeParams</span><span class="params">(Context context, String type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> maxSize = DEFAULT_MAX_SIZE_CELL_NETWORK;</span><br><span class="line">        <span class="keyword">if</span> (type == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> maxSize;</span><br><span class="line">        &#125;</span><br><span class="line">        maxSize = DEFAULT_MAX_SIZE_CELL_NETWORK;</span><br><span class="line">        <span class="keyword">return</span> maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置图片压缩质量</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context Context对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type    Category对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 压缩的质量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getQuealityParams</span><span class="params">(Context context, String type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> quality = DEFAULT_IMAGE_JPG_QUALITY;</span><br><span class="line">        <span class="keyword">if</span> (type == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> quality;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> quality;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 等比压缩图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap 原图</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale  压缩因子</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 压缩后的图片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Bitmap <span class="title">scale</span><span class="params">(Bitmap bitmap, <span class="keyword">float</span> scale)</span> </span>&#123;</span><br><span class="line">        Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">        matrix.postScale(scale, scale);</span><br><span class="line">        <span class="keyword">return</span> Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.getWidth(), bitmap.getHeight(), matrix, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 尺寸缩放</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap bitmap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> w      width</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> h      height</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> scaleBitmap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">scale</span><span class="params">(Bitmap bitmap, <span class="keyword">int</span> w, <span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (bitmap == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> width = bitmap.getWidth();</span><br><span class="line">        <span class="keyword">int</span> height = bitmap.getHeight();</span><br><span class="line">        Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">        <span class="keyword">float</span> scaleWidth = ((<span class="keyword">float</span>) w / width);</span><br><span class="line">        <span class="keyword">float</span> scaleHeight = ((<span class="keyword">float</span>) h / height);</span><br><span class="line">        matrix.postScale(scaleWidth, scaleHeight);</span><br><span class="line">        <span class="keyword">return</span> Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, width, height, matrix, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 等比压缩图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resBitmap 原图</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> desWidth  压缩后图片的宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> desHeight 压缩后图片的高度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 压缩后的图片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">calculateInSampleSize</span><span class="params">(Bitmap resBitmap, <span class="keyword">int</span> desWidth, <span class="keyword">int</span> desHeight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> resWidth = resBitmap.getWidth();</span><br><span class="line">        <span class="keyword">int</span> resHeight = resBitmap.getHeight();</span><br><span class="line">        <span class="keyword">if</span> (resHeight &gt; desHeight || resWidth &gt; desWidth) &#123;</span><br><span class="line">            <span class="comment">// 计算出实际宽高和目标宽高的比率</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> heightRatio = (<span class="keyword">float</span>) desHeight / (<span class="keyword">float</span>) resHeight;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> widthRatio = (<span class="keyword">float</span>) desWidth / (<span class="keyword">float</span>) resWidth;</span><br><span class="line">            <span class="keyword">float</span> scale = heightRatio &lt; widthRatio ? heightRatio : widthRatio;</span><br><span class="line">            <span class="keyword">return</span> scale(resBitmap, scale);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resBitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析图片的旋转方向</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jpeg 图片数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 旋转角度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">decodeImageDegree</span><span class="params">(<span class="keyword">byte</span>[] jpeg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> degree = ImageExif.getOrientation(jpeg);</span><br><span class="line">        <span class="keyword">return</span> degree;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到要显示的图片数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename 图片文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Bitmap 返回显示的图片bitmap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createBitmap</span><span class="params">(Context context, String filename, <span class="keyword">int</span> orientatoin)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">        Bitmap transformed = <span class="keyword">null</span>;</span><br><span class="line">        BitmapFactory.Options opts = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> width = DensityUtils.getDisplayWidth(context);</span><br><span class="line">            <span class="keyword">int</span> hight = DensityUtils.getDisplayHeight(context);</span><br><span class="line">            <span class="keyword">int</span> min = Math.min(width, hight);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">true</span>;</span><br><span class="line">            BitmapFactory.decodeFile(filename, opts);</span><br><span class="line">            opts.inSampleSize =</span><br><span class="line">                    BitmapUtils.computeSampleSize(opts, min, BitmapUtils.MAXLENTH * BitmapUtils.MAXLENTH);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = BitmapFactory.decodeFile(filename, opts);</span><br><span class="line">            transformed = BitmapUtils.rotateBitmap(orientatoin, bitmap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">                bitmap.recycle();</span><br><span class="line">            &#125;</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">true</span>;</span><br><span class="line">            BitmapFactory.decodeFile(filename, opts);</span><br><span class="line">            opts.inSampleSize =</span><br><span class="line">                    BitmapUtils.computeSampleSize(opts, -<span class="number">1</span>, opts.outWidth * opts.outHeight</span><br><span class="line">                            / BitmapUtils.PIC_COMPRESS_SIZE);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = BitmapFactory.decodeFile(filename, opts);</span><br><span class="line">            transformed = BitmapUtils.rotateBitmap(orientatoin, bitmap);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (transformed != bitmap &amp;&amp; bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bitmap.recycle();</span><br><span class="line">            bitmap = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createBitmap</span><span class="params">(Context context, <span class="keyword">byte</span>[] imageByte, <span class="keyword">int</span> orientatoin)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">        Bitmap transformed = <span class="keyword">null</span>;</span><br><span class="line">        BitmapFactory.Options opts = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> width = DensityUtils.getDisplayWidth(context);</span><br><span class="line">            <span class="keyword">int</span> hight = DensityUtils.getDisplayHeight(context);</span><br><span class="line">            <span class="keyword">int</span> min = Math.min(width, hight);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = BitmapFactory.decodeByteArray(imageByte, <span class="number">0</span>, imageByte.length);</span><br><span class="line">            transformed = BitmapUtils.rotateBitmap(orientatoin, bitmap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">                bitmap.recycle();</span><br><span class="line">            &#125;</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">true</span>;</span><br><span class="line">            BitmapFactory.decodeByteArray(imageByte, <span class="number">0</span>, imageByte.length, opts);</span><br><span class="line">            opts.inSampleSize =</span><br><span class="line">                    BitmapUtils.computeSampleSize(opts, -<span class="number">1</span>, opts.outWidth * opts.outHeight</span><br><span class="line">                            / BitmapUtils.PIC_COMPRESS_SIZE);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = BitmapFactory.decodeByteArray(imageByte, <span class="number">0</span>, imageByte.length, opts);</span><br><span class="line">            transformed = BitmapUtils.rotateBitmap(orientatoin, bitmap);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (transformed != bitmap &amp;&amp; bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bitmap.recycle();</span><br><span class="line">            bitmap = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createBitmap</span><span class="params">(Context context, <span class="keyword">int</span>[] argbByte, Rect roundRect, Rect cropRect, <span class="keyword">int</span> orientatoin)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">        Bitmap transformed = <span class="keyword">null</span>;</span><br><span class="line">        BitmapFactory.Options opts = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//            int width = DensityUtils.getDisplayWidth(context);</span></span><br><span class="line"><span class="comment">//            int hight = DensityUtils.getDisplayHeight(context);</span></span><br><span class="line"><span class="comment">//            int min = Math.min(width, hight);</span></span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = Bitmap.createBitmap(argbByte, roundRect.width(), roundRect.height(), Bitmap.Config.ARGB_8888);</span><br><span class="line"><span class="comment">//            bitmap = Bitmap.createBitmap(roundRect.width(), roundRect.height(), Bitmap.Config.ARGB_8888);</span></span><br><span class="line"><span class="comment">//            bitmap.setPixels(argbByte, 0, roundRect.width(), 0, 0, roundRect.width(), roundRect.height());</span></span><br><span class="line">            bitmap = Bitmap.createBitmap(bitmap, cropRect.left, cropRect.top, cropRect.width(), cropRect.height());</span><br><span class="line"></span><br><span class="line">            transformed = BitmapUtils.rotateBitmap(orientatoin, bitmap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">                bitmap.recycle();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (transformed != bitmap &amp;&amp; bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bitmap.recycle();</span><br><span class="line">            bitmap = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createBitmap</span><span class="params">(Context context, <span class="keyword">int</span> pw, <span class="keyword">int</span> ph, <span class="keyword">int</span>[] argbByte)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">        Bitmap transformed = <span class="keyword">null</span>;</span><br><span class="line">        BitmapFactory.Options opts = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> width = DensityUtils.getDisplayWidth(context);</span><br><span class="line">            <span class="keyword">int</span> hight = DensityUtils.getDisplayHeight(context);</span><br><span class="line">            <span class="keyword">int</span> min = Math.min(width, hight);</span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = Bitmap.createBitmap(argbByte, pw, ph, Bitmap.Config.RGB_565);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">                bitmap.recycle();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (transformed != bitmap &amp;&amp; bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bitmap.recycle();</span><br><span class="line">            bitmap = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片转换为base64</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap  图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> quality 压缩质量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> base64编码的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">bitmapToJpegBase64</span><span class="params">(Bitmap bitmap, <span class="keyword">int</span> quality)</span> </span>&#123;</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            bitmap.compress(CompressFormat.JPEG, quality, out);</span><br><span class="line">            <span class="keyword">byte</span>[] data = out.toByteArray();</span><br><span class="line">            <span class="keyword">return</span> Base64Utils.encodeToString(data, Base64Utils.NO_WRAP);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (out != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    out.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从文件中加载图片数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path 图片的本地存储路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Bitmap 图片数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">loadBitmapFromFile</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (path != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                bitmap = BitmapFactory.decodeFile(path);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从文件中加载图片数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path 图片的本地存储路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Bitmap 图片数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">loadBitmapFromFile</span><span class="params">(Context context, String path)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (path != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> orientatoin = decodeImageDegree(path);</span><br><span class="line">                bitmap = createBitmap(context, path, orientatoin);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">saveTakePictureResult</span><span class="params">(<span class="keyword">final</span> Context context, String folderName, Bitmap image)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        File file = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 取得图片保存目录</span></span><br><span class="line">        String dir = getTakePictureCacheDir(context);</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(dir)) &#123;</span><br><span class="line">            <span class="comment">// 取得图片文件夹名称</span></span><br><span class="line">            dir = dir + File.separator + folderName;</span><br><span class="line">            file = <span class="keyword">new</span> File(dir);</span><br><span class="line">            <span class="comment">// 判断保存图片文件夹是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (ensureDirectoryExist(file)) &#123;</span><br><span class="line">                String imageFileName = String.format(<span class="string">"B%s.%s"</span>,</span><br><span class="line">                        System.currentTimeMillis() / <span class="number">1000</span>, IMAGE_KEY_SUFFIX);</span><br><span class="line">                file = <span class="keyword">new</span> File(folderName + File.separator + imageFileName);</span><br><span class="line">                <span class="keyword">boolean</span> fileFlag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                        fileFlag = file.createNewFile();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    fileFlag = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (fileFlag) &#123;</span><br><span class="line">                    <span class="comment">// 保存图片数据</span></span><br><span class="line">                    compressToFile(image, <span class="number">100</span>, dir + File.separator + imageFileName);</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 保存目录不可使用</span></span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 保存目录不可使用</span></span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getTakePictureCacheDir</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        File cacheDir = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 如果SDCard可写，得到SDCard路径</span></span><br><span class="line">        <span class="keyword">boolean</span> sdcardWriteable = TextUtils.equals(Environment.MEDIA_MOUNTED, Environment.getExternalStorageState());</span><br><span class="line">        <span class="keyword">if</span> (sdcardWriteable) &#123;</span><br><span class="line">            cacheDir = Environment.getExternalStorageDirectory();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">null</span> != cacheDir) ? cacheDir.getAbsolutePath() : <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Uri <span class="title">saveTakePictureImage</span><span class="params">(<span class="keyword">byte</span>[] data, String dir, String filename)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(dir, filename);</span><br><span class="line">        FileOutputStream fout = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fout = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            fout.write(data);</span><br><span class="line">            fout.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 异常时删除保存失败的文件</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (file != <span class="keyword">null</span> &amp;&amp; file.exists() &amp;&amp; file.isFile()) &#123;</span><br><span class="line">                    file.delete();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fout != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fout.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Uri.fromFile(file);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">ensureDirectoryExist</span><span class="params">(<span class="keyword">final</span> File dir)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dir == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!dir.exists()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                dir.mkdirs();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SecurityException e) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compressToFile</span><span class="params">(Bitmap bitmap, String path)</span> </span>&#123;</span><br><span class="line">        compressToFile(bitmap, DEFAULT_JPEG_QUALITY, path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compressToFile</span><span class="params">(Bitmap bitmap, <span class="keyword">int</span> quality, String path)</span> </span>&#123;</span><br><span class="line">        compressToFile(bitmap, CompressFormat.JPEG, quality, path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compressToFile</span><span class="params">(Bitmap bitmap, CompressFormat format, <span class="keyword">int</span> quality, String path)</span> </span>&#123;</span><br><span class="line">        File f = <span class="keyword">new</span> File(path);</span><br><span class="line">        FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos = <span class="keyword">new</span> FileOutputStream(f);</span><br><span class="line">            bitmap.compress(format, quality, fos);</span><br><span class="line">            fos.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="comment">// 异常时删除保存失败的文件</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (f != <span class="keyword">null</span> &amp;&amp; f.exists() &amp;&amp; f.isFile()) &#123;</span><br><span class="line">                    f.delete();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (f != <span class="keyword">null</span> &amp;&amp; f.exists() &amp;&amp; f.isFile()) &#123;</span><br><span class="line">                    f.delete();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IoUtils.closeQuietly(fos);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createLivenessBitmap</span><span class="params">(Context context, <span class="keyword">int</span>[] argbByte, Rect roundRect, Rect cropRect, <span class="keyword">int</span> orientatoin)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">        Bitmap transformed = <span class="keyword">null</span>;</span><br><span class="line">        BitmapFactory.Options opts = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//            int width = DensityUtils.getDisplayWidth(context);</span></span><br><span class="line"><span class="comment">//            int hight = DensityUtils.getDisplayHeight(context);</span></span><br><span class="line"><span class="comment">//            int min = Math.min(width, hight);</span></span><br><span class="line">            opts.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">            bitmap = Bitmap.createBitmap(argbByte, roundRect.width(), roundRect.height(), Bitmap.Config.ARGB_8888);</span><br><span class="line"><span class="comment">//            bitmap = Bitmap.createBitmap(roundRect.width(), roundRect.height(), Bitmap.Config.ARGB_8888);</span></span><br><span class="line"><span class="comment">//            bitmap.setPixels(argbByte, 0, roundRect.width(), 0, 0, roundRect.width(), roundRect.height());</span></span><br><span class="line">            bitmap = Bitmap.createBitmap(bitmap, cropRect.left, cropRect.top, cropRect.width(), cropRect.height());</span><br><span class="line"></span><br><span class="line">            transformed = BitmapUtils.rotateBitmap(orientatoin, bitmap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">                bitmap.recycle();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (transformed != bitmap &amp;&amp; bitmap != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bitmap.recycle();</span><br><span class="line">            bitmap = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createLivenessBitmap</span><span class="params">(Context context, <span class="keyword">int</span>[] argbByte, Rect roundRect)</span> </span>&#123;</span><br><span class="line">        Bitmap transformed = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            transformed = Bitmap.createBitmap(argbByte,</span><br><span class="line">                    roundRect.width(), roundRect.height(),</span><br><span class="line">                    Bitmap.Config.ARGB_8888);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (transformed != <span class="keyword">null</span>) &#123;</span><br><span class="line">                transformed.recycle();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      BitmapUtil
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="BitmapUtil" scheme="/tags/BitmapUtil/"/>
    
  </entry>
  
  <entry>
    <title>图片</title>
    <link href="/2020/02/07/Android/%E6%8E%A7%E4%BB%B6/%E5%9B%BE%E7%89%87/"/>
    <id>/2020/02/07/Android/控件/图片/</id>
    <published>2020-02-07T14:12:34.000Z</published>
    <updated>2020-02-07T14:12:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">byte</span>[] photoBytes;  <span class="comment">// 二进制图片内存数据</span></span><br><span class="line">ImageView imageView =<span class="keyword">this</span>.findViewById(R.id.imageViewPhoto);</span><br><span class="line">Bitmap bitmap = BitmapFactory.decodeByteArray(photoBytes, <span class="number">0</span>, photoBytes.length);</span><br><span class="line">imageView.setImageBitmap(bitmap);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ImageLayout</span></span><br><span class="line">bmp = base64ToBitmap(strBase64);</span><br><span class="line">ImageView iv = <span class="keyword">new</span> ImageView(<span class="keyword">this</span>);</span><br><span class="line">iv.setImageBitmap(bmp);</span><br><span class="line">mImageLayout.addView(iv, <span class="keyword">new</span> LinearLayout.LayoutParams(<span class="number">300</span>, <span class="number">300</span>));</span><br></pre></td></tr></table></figure><h2 id="Bitmap"><a href="#Bitmap" class="headerlink" title="Bitmap"></a>Bitmap</h2><h3 id="图片加载"><a href="#图片加载" class="headerlink" title="图片加载"></a>图片加载</h3><ul><li><code>implementation &#39;com.github.bumptech.glide:glide:4.10.0&#39;</code></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// base64 图片数据</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> Bitmap <span class="title">base64ToBitmap</span><span class="params">(String base64Data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">byte</span>[] bytes = Base64Utils.decode(base64Data, Base64Utils.NO_WRAP);</span><br><span class="line">    <span class="keyword">return</span> BitmapFactory.decodeByteArray(bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 解析图片的旋转方向</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> path 图片的路径</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 旋转角度</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE0 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE90 = <span class="number">90</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE180 = <span class="number">180</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ROTATE270 = <span class="number">270</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">decodeImageDegree</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> degree = ROTATE0;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ExifInterface exifInterface = <span class="keyword">new</span> ExifInterface(path);</span><br><span class="line">        <span class="keyword">int</span> orientation =</span><br><span class="line">                exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION,</span><br><span class="line">                        ExifInterface.ORIENTATION_NORMAL);</span><br><span class="line">        <span class="keyword">switch</span> (orientation) &#123;</span><br><span class="line">            <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_90:</span><br><span class="line">                degree = ROTATE90;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_180:</span><br><span class="line">                degree = ROTATE180;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_270:</span><br><span class="line">                degree = ROTATE270;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                degree = ROTATE0;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        degree = ROTATE0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> degree;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">decodeImageDegree</span><span class="params">(<span class="keyword">byte</span>[] jpeg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> degree = ImageExif.getOrientation(jpeg);</span><br><span class="line">    <span class="keyword">return</span> degree;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 从文件中加载图片数据</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> path 图片的本地存储路径</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> Bitmap 图片数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">loadBitmapFromFile</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">    Bitmap bitmap = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (path != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            bitmap = BitmapFactory.decodeFile(path);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bitmap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 根据从数据中读到的方向旋转图片</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> orientation 图片方向</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bitmap      要旋转的bitmap</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 旋转后的图片</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">rotateBitmap</span><span class="params">(<span class="keyword">float</span> orientation, Bitmap bitmap)</span> </span>&#123;</span><br><span class="line">    Bitmap transformed;</span><br><span class="line">    Matrix m = <span class="keyword">new</span> Matrix();</span><br><span class="line">    <span class="keyword">if</span> (orientation == <span class="number">0</span>) &#123;</span><br><span class="line">        transformed = bitmap;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        m.setRotate(orientation);</span><br><span class="line">        transformed = Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.getWidth(), bitmap.getHeight(), m, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> transformed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bitmap  图片</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> quality 生成的JPG的质量</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> maxSize 最大边像素数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> base64编码的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">bitmapToJpegBase64</span><span class="params">(Bitmap bitmap, <span class="keyword">int</span> quality, <span class="keyword">float</span> maxSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">float</span> scale = maxSize / Math.max(bitmap.getWidth(), bitmap.getHeight());</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            bitmap = scale(bitmap, scale);</span><br><span class="line">        &#125;</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        bitmap.compress(CompressFormat.JPEG, quality, out);</span><br><span class="line">        <span class="keyword">byte</span>[] data = out.toByteArray();</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Base64Utils.encodeToString(data, Base64Utils.NO_WRAP);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片拉伸"><a href="#图片拉伸" class="headerlink" title="图片拉伸"></a>图片拉伸</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 尺寸缩放</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bitmap bitmap</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> w      width</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> h      height</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> scaleBitmap</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">scale</span><span class="params">(Bitmap bitmap, <span class="keyword">int</span> w, <span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (bitmap == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> width = bitmap.getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = bitmap.getHeight();</span><br><span class="line">    Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">    <span class="keyword">float</span> scaleWidth = ((<span class="keyword">float</span>) w / width);</span><br><span class="line">    <span class="keyword">float</span> scaleHeight = ((<span class="keyword">float</span>) h / height);</span><br><span class="line">    matrix.postScale(scaleWidth, scaleHeight);</span><br><span class="line">    <span class="keyword">return</span> Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, width, height, matrix, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 等比压缩图片</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> resBitmap 原图</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> desWidth  压缩后图片的宽度</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> desHeight 压缩后图片的高度</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 压缩后的图片</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">calculateInSampleSize</span><span class="params">(Bitmap resBitmap, <span class="keyword">int</span> desWidth, <span class="keyword">int</span> desHeight)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> resWidth = resBitmap.getWidth();</span><br><span class="line">    <span class="keyword">int</span> resHeight = resBitmap.getHeight();</span><br><span class="line">    <span class="keyword">if</span> (resHeight &gt; desHeight || resWidth &gt; desWidth) &#123;</span><br><span class="line">        <span class="comment">// 计算出实际宽高和目标宽高的比率</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> heightRatio = (<span class="keyword">float</span>) desHeight / (<span class="keyword">float</span>) resHeight;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> widthRatio = (<span class="keyword">float</span>) desWidth / (<span class="keyword">float</span>) resWidth;</span><br><span class="line">        <span class="keyword">float</span> scale = heightRatio &lt; widthRatio ? heightRatio : widthRatio;</span><br><span class="line">        <span class="keyword">return</span> scale(resBitmap, scale);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resBitmap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片比例缩放-质量压缩"><a href="#图片比例缩放-质量压缩" class="headerlink" title="图片比例缩放 / 质量压缩"></a>图片比例缩放 / 质量压缩</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 等比压缩图片</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bitmap 原图</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> scale  压缩因子</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 压缩后的图片</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Bitmap <span class="title">scale</span><span class="params">(Bitmap bitmap, <span class="keyword">float</span> scale)</span> </span>&#123;</span><br><span class="line">    Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">    matrix.postScale(scale, scale);</span><br><span class="line">    <span class="keyword">return</span> Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.getWidth(), bitmap.getHeight(), matrix, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 质量压缩</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bitmap 被压缩的图片</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> sizeLimit 大小限制</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 压缩后的图片</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Bitmap <span class="title">compressBitmap</span><span class="params">(Bitmap bitmap, <span class="keyword">long</span> sizeLimit)</span> </span>&#123;</span><br><span class="line">    ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">    <span class="keyword">int</span> quality = <span class="number">100</span>;</span><br><span class="line">    bitmap.compress(Bitmap.CompressFormat.JPEG, quality, baos);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环判断压缩后图片是否超过限制大小</span></span><br><span class="line">    <span class="keyword">while</span>(baos.toByteArray().length / <span class="number">1024</span> &gt; sizeLimit) &#123;</span><br><span class="line">        <span class="comment">// 清空baos</span></span><br><span class="line">        baos.reset();</span><br><span class="line">        bitmap.compress(Bitmap.CompressFormat.JPEG, quality, baos);</span><br><span class="line">        quality -= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Bitmap newBitmap = BitmapFactory.decodeStream(<span class="keyword">new</span> ByteArrayInputStream(baos.toByteArray()), <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> newBitmap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将色彩模式换成RGB_565也会比默认的ARGB8888降低一半质量</span></span><br><span class="line">BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">options.inPreferredConfig = Bitmap.Config.RGB_565;</span><br><span class="line">bm = BitmapFactory.decodeFile(filePath, options);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 质量压缩：百度</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bitmap  图片</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> quality 生成的JPG的质量</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> maxSize 最大边像素数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> base64编码的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">bitmapToJpegBase64</span><span class="params">(Bitmap bitmap, <span class="keyword">int</span> quality, <span class="keyword">float</span> maxSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">float</span> scale = maxSize / Math.max(bitmap.getWidth(), bitmap.getHeight());</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            bitmap = scale(bitmap, scale);</span><br><span class="line">        &#125;</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        bitmap.compress(CompressFormat.JPEG, quality, out);</span><br><span class="line">        <span class="keyword">byte</span>[] data = out.toByteArray();</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Base64Utils.encodeToString(data, Base64Utils.NO_WRAP);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片裁剪"><a href="#图片裁剪" class="headerlink" title="图片裁剪"></a>图片裁剪</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 裁剪</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bitmap 原图</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 裁剪后的图像</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Bitmap <span class="title">cropBitmap</span><span class="params">(Bitmap bitmap)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> w = bitmap.getWidth(); <span class="comment">// 得到图片的宽，高</span></span><br><span class="line">    <span class="keyword">int</span> h = bitmap.getHeight();</span><br><span class="line">    <span class="keyword">int</span> cropWidth = w &gt;= h ? h : w;<span class="comment">// 裁切后所取的正方形区域边长</span></span><br><span class="line">    cropWidth /= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> cropHeight = (<span class="keyword">int</span>) (cropWidth / <span class="number">1.2</span>);</span><br><span class="line">    <span class="keyword">return</span> Bitmap.createBitmap(bitmap, w / <span class="number">3</span>, <span class="number">0</span>, cropWidth, cropHeight, <span class="keyword">null</span>, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片旋转-偏移"><a href="#图片旋转-偏移" class="headerlink" title="图片旋转 / 偏移"></a>图片旋转 / 偏移</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 选择变换</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> origin 原图</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> alpha  旋转角度，可正可负</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 旋转后的图片</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Bitmap <span class="title">rotateBitmap</span><span class="params">(Bitmap origin, <span class="keyword">float</span> alpha)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (origin == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> width = origin.getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = origin.getHeight();</span><br><span class="line">    Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">    matrix.setRotate(alpha);</span><br><span class="line">    <span class="comment">// 围绕原地进行旋转</span></span><br><span class="line">    Bitmap newBM = Bitmap.createBitmap(origin, <span class="number">0</span>, <span class="number">0</span>, width, height, matrix, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (newBM.equals(origin)) &#123;</span><br><span class="line">        <span class="keyword">return</span> newBM;</span><br><span class="line">    &#125;</span><br><span class="line">    origin.recycle();</span><br><span class="line">    <span class="keyword">return</span> newBM;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 偏移效果</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> origin 原图</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 偏移后的bitmap</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Bitmap <span class="title">skewBitmap</span><span class="params">(Bitmap origin)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (origin == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> width = origin.getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = origin.getHeight();</span><br><span class="line">    Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">    matrix.postSkew(-<span class="number">0.6f</span>, -<span class="number">0.3f</span>);</span><br><span class="line">    Bitmap newBM = Bitmap.createBitmap(origin, <span class="number">0</span>, <span class="number">0</span>, width, height, matrix, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (newBM.equals(origin)) &#123;</span><br><span class="line">        <span class="keyword">return</span> newBM;</span><br><span class="line">    &#125;</span><br><span class="line">    origin.recycle();</span><br><span class="line">    <span class="keyword">return</span> newBM;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片识别"><a href="#图片识别" class="headerlink" title="图片识别"></a>图片识别</h2><ul><li>二维码识别：<ul><li><a href="https://github.com/zxing/zxing" target="_blank" rel="noopener">zxing</a><ul><li><a href="https://github.com/ahuyangdong/QrCodeDemo4" target="_blank" rel="noopener">Demo扫码识别</a></li></ul></li><li><a href="https://github.com/bingoogolapple/BGAQRCode-Android" target="_blank" rel="noopener">BGAQRCode</a></li></ul></li><li>身份证识别：<ul><li><a href="https://github.com/fanqieVip/AndroidOcrLibs" target="_blank" rel="noopener">AndroidOcrLibs</a></li><li><a href="https://github.com/XieZhiFa/IdCardOCR" target="_blank" rel="noopener">IdCardOCR</a></li></ul></li><li>识别引擎<ul><li><a href="https://github.com/rmtheis/tess-two" target="_blank" rel="noopener">tess-two</a></li><li><a href="https://github.com/adaptech-cz/Tesseract4Android" target="_blank" rel="noopener">Tesseract4Android</a></li><li><a href="https://github.com/465857721/IDCardOCR_China" target="_blank" rel="noopener">IDCardOCR_China-基于Tesseract</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      Bitmap
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="Bitmap" scheme="/tags/Bitmap/"/>
    
  </entry>
  
  <entry>
    <title>Activity</title>
    <link href="/2020/02/07/Android/%E6%8E%A7%E4%BB%B6/Activity/"/>
    <id>/2020/02/07/Android/控件/Activity/</id>
    <published>2020-02-07T14:12:34.000Z</published>
    <updated>2020-02-07T14:12:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="java关联xml"><a href="#java关联xml" class="headerlink" title="java关联xml"></a>java关联xml</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// MainActivity.java</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="comment">// 绑定：res/layout/activity_main.xml</span></span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Standard-标准模式: 默认模式, 每次调用都启动一个新的activity--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span> <span class="attr">android:launchMode</span>=<span class="string">"standard"</span> &gt;</span> ... <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--singleTop-栈顶复用模式: 如果activity处于栈顶, 则直接使用, 否则创建新的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span> <span class="attr">android:launchMode</span>=<span class="string">"singleTop"</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--singleTask-栈内复用模式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span> <span class="attr">android:launchMode</span>=<span class="string">"singleTask"</span> &gt;</span> ... <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--singleInstance-全局唯一模式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span> <span class="attr">android:launchMode</span>=<span class="string">"singleInstance"</span> &gt;</span> ... <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 背景图：activity_main.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/复制main_background"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 复制文件“main_background.png”到“res/drawable”下即可--&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 基础 Layout --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 完整生存期</span></span><br><span class="line">onCreate();     <span class="comment">// 启动</span></span><br><span class="line">onDestroy();    <span class="comment">// 销毁</span></span><br><span class="line"><span class="comment">// 可见生存期</span></span><br><span class="line">onStart();      <span class="comment">// 对用户可见</span></span><br><span class="line">onStop();       <span class="comment">// 对用户不可见</span></span><br><span class="line"><span class="comment">// 前台生存期</span></span><br><span class="line">onPause();      <span class="comment">// 暂停, 离开前台</span></span><br><span class="line">onResume()      <span class="comment">// 继续, 进入前台</span></span><br><span class="line"><span class="comment">// 其他</span></span><br><span class="line">onRestart()     <span class="comment">// 停止(onStop)-&gt;运行(onStart), 该函数在onStart之前调用</span></span><br><span class="line">onBackPressed() <span class="comment">// 回退键处理, 可以当做用户强制退出</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 终止生命周期</span></span><br><span class="line">Activity.finish();      <span class="comment">// 将最上面的Activity移出栈, 占用资源并不即时释放. 系统会在必要时调用onDestroy()完全销毁.</span></span><br><span class="line">Activity.onDestory()    <span class="comment">// 系统销毁这个Activity的实例在内存中占据的空间. onDestory是activity生命周期的最后一步.</span></span><br><span class="line">System.exit(<span class="number">0</span>)          <span class="comment">// 退出整个应用程序</span></span><br></pre></td></tr></table></figure><h3 id="通讯"><a href="#通讯" class="headerlink" title="通讯"></a>通讯</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 调用Activity</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 当前Activity.this, 目标Activity.class</span></span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, CheatActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    intent.putExtra(key, value);</span><br><span class="line">    <span class="comment">// 无回调方式调用</span></span><br><span class="line">    startActivity(intent);</span><br><span class="line">    <span class="comment">// 该函数非阻塞: 标记返回值标识</span></span><br><span class="line">    startActivityForResult(intent, REQUEST_CODE_CHEAT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接收Activity</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    String value = getIntent().getStringExtra(key);</span><br><span class="line">    <span class="comment">// 设置返回值</span></span><br><span class="line">    Intent result = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, ThisActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    result.putExtra(key, value);</span><br><span class="line">    setResult(RESULT_OK, result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用方Activity接收返回值</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent intent)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, intent);</span><br><span class="line">    <span class="comment">// REQUEST_CODE_CHEAT 对应startActivityForResult 第二个参数</span></span><br><span class="line">    <span class="keyword">if</span>(REQUEST_CODE_CHEAT == requestCode) &#123;</span><br><span class="line">        <span class="keyword">if</span>(resultCode == Activity.RESULT_OK)</span><br><span class="line">            Sting value = intent.getStringExtra(key));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="翻转"><a href="#翻转" class="headerlink" title="翻转"></a>翻转</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">+ activity: 屏幕翻转会完全销毁activity,并重建</span><br><span class="line">+ layout: 系统自动匹配最佳layout并加载, 默认加载layout, 横屏自动加载layout-land</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 禁止横版</span></span><br><span class="line"><span class="number">1</span>. onCreate()中增加:</span><br><span class="line">setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>，Manifest.xml文件中为所有Activity加上配置属性android:screenOrientation=<span class="string">"portrait"</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// activity 回收前数据存储</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_INDEX = <span class="string">"index"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> mCurrentIndex = <span class="number">0</span>;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    if(savedInstanceState != null)  # 首次启动为空</span><br><span class="line">        mCurrentIndex = savedInstanceState.getInt(KEY_INDEX);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSaveInstanceState</span><span class="params">(Bundle outState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onSaveInstanceState(outState);</span><br><span class="line">    outState.putInt(KEY_INDEX, mCurrentIndex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="手动创建控件"><a href="#手动创建控件" class="headerlink" title="手动创建控件"></a>手动创建控件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// xml中指定id，最外层Layout也可以指定id</span></span><br><span class="line">LinearLayout linearLayout = <span class="keyword">this</span>.findViewById(R.id.layoutNFC);</span><br><span class="line"><span class="comment">// 创建TextView，并指定控件参数</span></span><br><span class="line">TextView tv = <span class="keyword">new</span> TextView(<span class="keyword">this</span>);</span><br><span class="line">LinearLayout.LayoutParams layoutParams =   <span class="keyword">new</span> LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);</span><br><span class="line">tv.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(layoutParams));</span><br><span class="line">tv.setText(<span class="string">"test"</span>);</span><br><span class="line"><span class="comment">// TextView添加到linearLayout</span></span><br><span class="line">linearLayout.addView(tv);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Activity
    
    </summary>
    
      <category term="Android" scheme="/categories/Android/"/>
    
    
      <category term="Activity" scheme="/tags/Activity/"/>
    
  </entry>
  
</feed>
